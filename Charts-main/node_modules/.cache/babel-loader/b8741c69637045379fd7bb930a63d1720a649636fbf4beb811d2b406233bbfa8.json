{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juhipawa\\\\Downloads\\\\Charts-main\\\\Charts-main\\\\src\\\\components\\\\StackedBarChart.js\";\nimport React from \"react\";\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Stackedbarchart() {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work status\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to Piechart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 57\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        type: \"bar\",\n        width: 1349,\n        height: 560,\n        series: [{\n          name: \"state 1\",\n          data: [4, 5, 4, 3, 2, 7, 5, 2, 4, 1]\n          //color: '#f90000'\n        }, {\n          name: \"state 2\",\n          data: [2, 3, 2, 5, 6, 5, 1, 6, 7, 6]\n          // color: '#000000'\n        }, {\n          name: \"state 3\",\n          data: [3, 2, 3, 7, 2, 4, 5, 4, 3, 2]\n          // color: '#000000'\n        }, {\n          name: \"state 4\",\n          data: [1, 4, 5, 4, 6]\n          // color: '#000000'\n        }, {\n          name: \"state 5\",\n          data: [3, 6, 3, 2, 4]\n          // color: '#000000'\n        }, {\n          name: \"state 6\",\n          data: [6, 2, 5, 8, 1]\n          // color: '#000000'\n        }, {\n          name: \"state 7\",\n          data: [2, 6, 7, 2, 1]\n          // color: '#000000'\n        }, {\n          name: \"state 8\",\n          data: [4, 5, 7, 4, 5]\n          // color: '#000000'\n        }, {\n          name: \"state 9\",\n          data: [1, 6, 6, 2, 4]\n          // color: '#000000'\n        }, {\n          name: \"state 10\",\n          data: [2, 5, 2, 3, 1, 3, 6, 3, 2, 4]\n          // color: '#000000'\n        }],\n\n        options: {\n          title: {\n            text: \"Employee BarChart\"\n          },\n          chart: {\n            stacked: true\n          },\n          plotOptions: {\n            bar: {\n              horizontal: true,\n              columnWidth: '100%'\n            }\n          },\n          stroke: {\n            width: 1\n          },\n          xaxis: {\n            title: {\n              text: \"state level\"\n            },\n            categories: [\"User 1\", \"User 2\", \"User 3\", \"User 4\", \"User 5\", \"User 6\", \"User 7\", \"User 8\"]\n          },\n          yaxis: {\n            title: {\n              text: \"Users task\"\n            }\n          },\n          legend: {\n            position: 'bottom'\n          },\n          dataLabels: {\n            enabled: true\n          },\n          grid: {\n            show: true,\n            xaxis: {\n              lines: {\n                show: false\n              }\n            },\n            yaxis: {\n              lines: {\n                show: false\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 85\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 28\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n}\n\n/*import React, { useState } from \"react\";\r\nimport {\r\n  chart as ChartJS,\r\n  categoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js'\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst StackedBarChart = () => {\r\n  const [data, setData] = useState({\r\n    labels: [\"User 1\", \"User 2\", \"User 3\", \"User 4\",\"User 5\",\"User 6\",\"User 7\",\"User 8\"],\r\n    datasets: [ \r\n      \r\n      {\r\n        label: \"State 1\", \r\n        backgroundColor: \"#FF6384\",\r\n        data: [4, 5, 4, 3, 2],\r\n      },\r\n      {\r\n        label: \"State 2\",\r\n        backgroundColor: \"#36A2EB\",\r\n        data: [2, 3, 2, 5, 6, 7, 5],\r\n      },\r\n      {\r\n        label: \"State 3\",\r\n        backgroundColor: \"#f3ba2f\",\r\n        data: [3, 2, 3, 7, 2, 5, 1, 4, 3, 4],\r\n      },\r\n      {\r\n        label: \"State 4\",\r\n        backgroundColor: \"#2a71d0\",\r\n        data: [1],\r\n      },\r\n      {\r\n        label: \"State 5\",\r\n        backgroundColor: \"#ee82ee\",\r\n        data: [1],\r\n      },\r\n      {\r\n        label: \"State 6\",\r\n        backgroundColor: \"#3cb371\",\r\n        data: [1, 4, 5, 7, 1, 4, 5, 7, 3, 9],\r\n      },\r\n      {\r\n        label: \"State 7\",\r\n        backgroundColor: \"#6a5acd\",\r\n        data: [7, 2, 7, 2, 1, 5, 4, 8, 3, 6],\r\n      },\r\n      {\r\n        label: \"State 8\",\r\n        backgroundColor: \"#ffa500\",\r\n        data: [3, 6, 4, 1, 1, 6, 4, 2, 8, 3],\r\n      },\r\n      {\r\n        label: \"State 9\",\r\n        backgroundColor: \"#616161\",\r\n        data: [1, 7, 5, 4, 1, 5, 7, 2, 4, 6],\r\n      },\r\n      {        \r\n        label: \"State 10\",\r\n        backgroundColor: \"#b4b4b4\",\r\n        data: [ 6, 8, 4, 2, 9, 7, 3, 4, 1, 7],\r\n\r\n      },      \r\n    ],\r\n  });\r\n\r\n  const options = {\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          stacked: true,\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {beginATZero: true },\r\n          stacked: true,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Bar data={data}  height={0} options={options} />\r\n    </div>\r\n  );\r\n};*/\n_c = Stackedbarchart;\nexport default Stackedbarchart;\nvar _c;\n$RefreshReg$(_c, \"Stackedbarchart\");","map":{"version":3,"names":["React","Chart","Stackedbarchart","name","data","title","text","chart","stacked","plotOptions","bar","horizontal","columnWidth","stroke","width","xaxis","categories","yaxis","legend","position","dataLabels","enabled","grid","show","lines"],"sources":["C:/Users/juhipawa/Downloads/Charts-main/Charts-main/src/components/StackedBarChart.js"],"sourcesContent":["import React from \"react\";\r\nimport Chart from 'react-apexcharts';\r\nfunction Stackedbarchart()\r\n{\r\n    return(<React.Fragment><div className=\"work status\"><h2>Welcome to Piechart</h2><Chart\r\n                type=\"bar\"\r\n                width={1349}\r\n                height={560}\r\n                series={[\r\n                  {\r\n                    name:\"state 1\",\r\n                    data:[4, 5, 4, 3, 2, 7, 5, 2, 4, 1],\r\n                    //color: '#f90000'\r\n                },\r\n                {\r\n                    name:\"state 2\",\r\n                    data:[2, 3, 2, 5, 6, 5, 1, 6, 7, 6],\r\n                   // color: '#000000'\r\n                },\r\n                {\r\n                    name:\"state 3\",\r\n                    data:[3, 2, 3, 7, 2, 4, 5, 4, 3, 2],\r\n                   // color: '#000000'\r\n                },\r\n                {\r\n                    name:\"state 4\",\r\n                    data:[1, 4, 5, 4,6],\r\n                   // color: '#000000'\r\n                },\r\n                {\r\n                    name:\"state 5\",\r\n                    data:[3, 6, 3, 2,4],\r\n                   // color: '#000000'\r\n                },\r\n                {\r\n                    name:\"state 6\",\r\n                    data:[6, 2, 5, 8,1],\r\n                   // color: '#000000'\r\n                },\r\n                {\r\n                    name:\"state 7\",\r\n                    data:[2, 6, 7, 2,1],\r\n                   // color: '#000000'\r\n                },\r\n                {\r\n                    name:\"state 8\",\r\n                    data:[4, 5, 7, 4,5],\r\n                   // color: '#000000'\r\n                },\r\n                {\r\n                    name:\"state 9\",\r\n                    data:[1, 6, 6, 2,4],\r\n                   // color: '#000000'\r\n                },\r\n                {\r\n                    name:\"state 10\",\r\n                    data:[2, 5, 2, 3, 1, 3, 6, 3, 2,4],\r\n                   // color: '#000000'\r\n                }\r\n                ]}\r\n                options={{\r\n                    title:{\r\n                        text:\"Employee BarChart\"\r\n                    },\r\n                    chart:{\r\n                        stacked:true,\r\n                    },\r\n                    plotOptions:{\r\n                        bar:{\r\n                            horizontal:true,\r\n                            columnWidth:'100%'\r\n                          }\r\n                    },\r\n                    stroke: {\r\n                        width: 1,\r\n                    },\r\n                    xaxis:{\r\n                        title:{\r\n                            text:\"state level\"\r\n                        },\r\n                        categories:[\"User 1\", \"User 2\", \"User 3\", \"User 4\",\"User 5\",\"User 6\",\"User 7\",\"User 8\"]\r\n                    },\r\n                    yaxis:{\r\n                        title:{\r\n                            text:\"Users task\"\r\n                        },\r\n                    },\r\n                    legend:{\r\n                        position: 'bottom'\r\n                    },\r\n                    dataLabels:{\r\n                        enabled:true,\r\n                    },\r\n                    grid: {\r\n                        show:true,\r\n                        xaxis:{\r\n                            lines:{\r\n                                show:false\r\n                            }\r\n                        },\r\n                        yaxis:{\r\n                            lines:{\r\n                                show:false\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n                /></div></React.Fragment>\r\n    );\r\n}\r\n\r\n\r\n\r\n/*import React, { useState } from \"react\";\r\nimport {\r\n  chart as ChartJS,\r\n  categoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js'\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst StackedBarChart = () => {\r\n  const [data, setData] = useState({\r\n    labels: [\"User 1\", \"User 2\", \"User 3\", \"User 4\",\"User 5\",\"User 6\",\"User 7\",\"User 8\"],\r\n    datasets: [ \r\n      \r\n      {\r\n        label: \"State 1\", \r\n        backgroundColor: \"#FF6384\",\r\n        data: [4, 5, 4, 3, 2],\r\n      },\r\n      {\r\n        label: \"State 2\",\r\n        backgroundColor: \"#36A2EB\",\r\n        data: [2, 3, 2, 5, 6, 7, 5],\r\n      },\r\n      {\r\n        label: \"State 3\",\r\n        backgroundColor: \"#f3ba2f\",\r\n        data: [3, 2, 3, 7, 2, 5, 1, 4, 3, 4],\r\n      },\r\n      {\r\n        label: \"State 4\",\r\n        backgroundColor: \"#2a71d0\",\r\n        data: [1],\r\n      },\r\n      {\r\n        label: \"State 5\",\r\n        backgroundColor: \"#ee82ee\",\r\n        data: [1],\r\n      },\r\n      {\r\n        label: \"State 6\",\r\n        backgroundColor: \"#3cb371\",\r\n        data: [1, 4, 5, 7, 1, 4, 5, 7, 3, 9],\r\n      },\r\n      {\r\n        label: \"State 7\",\r\n        backgroundColor: \"#6a5acd\",\r\n        data: [7, 2, 7, 2, 1, 5, 4, 8, 3, 6],\r\n      },\r\n      {\r\n        label: \"State 8\",\r\n        backgroundColor: \"#ffa500\",\r\n        data: [3, 6, 4, 1, 1, 6, 4, 2, 8, 3],\r\n      },\r\n      {\r\n        label: \"State 9\",\r\n        backgroundColor: \"#616161\",\r\n        data: [1, 7, 5, 4, 1, 5, 7, 2, 4, 6],\r\n      },\r\n      {        \r\n        label: \"State 10\",\r\n        backgroundColor: \"#b4b4b4\",\r\n        data: [ 6, 8, 4, 2, 9, 7, 3, 4, 1, 7],\r\n\r\n      },      \r\n    ],\r\n  });\r\n\r\n  const options = {\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          stacked: true,\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {beginATZero: true },\r\n          stacked: true,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Bar data={data}  height={0} options={options} />\r\n    </div>\r\n  );\r\n};*/\r\n\r\nexport default Stackedbarchart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,kBAAkB;AAAC;AACrC,SAASC,eAAe,GACxB;EACI,oBAAO,QAAC,KAAK,CAAC,QAAQ;IAAA,uBAAC;MAAK,SAAS,EAAC,aAAa;MAAA,wBAAC;QAAA,UAAI;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAK,uBAAC,KAAK;QAC1E,IAAI,EAAC,KAAK;QACV,KAAK,EAAE,IAAK;QACZ,MAAM,EAAE,GAAI;QACZ,MAAM,EAAE,CACN;UACEC,IAAI,EAAC,SAAS;UACdC,IAAI,EAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;UAClC;QACJ,CAAC,EACD;UACID,IAAI,EAAC,SAAS;UACdC,IAAI,EAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;UACnC;QACH,CAAC,EACD;UACID,IAAI,EAAC,SAAS;UACdC,IAAI,EAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;UACnC;QACH,CAAC,EACD;UACID,IAAI,EAAC,SAAS;UACdC,IAAI,EAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC;UACnB;QACH,CAAC,EACD;UACID,IAAI,EAAC,SAAS;UACdC,IAAI,EAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC;UACnB;QACH,CAAC,EACD;UACID,IAAI,EAAC,SAAS;UACdC,IAAI,EAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC;UACnB;QACH,CAAC,EACD;UACID,IAAI,EAAC,SAAS;UACdC,IAAI,EAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC;UACnB;QACH,CAAC,EACD;UACID,IAAI,EAAC,SAAS;UACdC,IAAI,EAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC;UACnB;QACH,CAAC,EACD;UACID,IAAI,EAAC,SAAS;UACdC,IAAI,EAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC;UACnB;QACH,CAAC,EACD;UACID,IAAI,EAAC,UAAU;UACfC,IAAI,EAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC;UAClC;QACH,CAAC,CACC;;QACF,OAAO,EAAE;UACLC,KAAK,EAAC;YACFC,IAAI,EAAC;UACT,CAAC;UACDC,KAAK,EAAC;YACFC,OAAO,EAAC;UACZ,CAAC;UACDC,WAAW,EAAC;YACRC,GAAG,EAAC;cACAC,UAAU,EAAC,IAAI;cACfC,WAAW,EAAC;YACd;UACN,CAAC;UACDC,MAAM,EAAE;YACJC,KAAK,EAAE;UACX,CAAC;UACDC,KAAK,EAAC;YACFV,KAAK,EAAC;cACFC,IAAI,EAAC;YACT,CAAC;YACDU,UAAU,EAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAC,QAAQ,EAAC,QAAQ,EAAC,QAAQ,EAAC,QAAQ;UAC1F,CAAC;UACDC,KAAK,EAAC;YACFZ,KAAK,EAAC;cACFC,IAAI,EAAC;YACT;UACJ,CAAC;UACDY,MAAM,EAAC;YACHC,QAAQ,EAAE;UACd,CAAC;UACDC,UAAU,EAAC;YACPC,OAAO,EAAC;UACZ,CAAC;UACDC,IAAI,EAAE;YACFC,IAAI,EAAC,IAAI;YACTR,KAAK,EAAC;cACFS,KAAK,EAAC;gBACFD,IAAI,EAAC;cACT;YACJ,CAAC;YACDN,KAAK,EAAC;cACFO,KAAK,EAAC;gBACFD,IAAI,EAAC;cACT;YACJ;UACJ;QACJ;MAAE;QAAA;QAAA;QAAA;MAAA,QACA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAM;IAAA;IAAA;IAAA;EAAA,QAAiB;AAEzC;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5FA,KA/GSrB,eAAe;AA6MxB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}