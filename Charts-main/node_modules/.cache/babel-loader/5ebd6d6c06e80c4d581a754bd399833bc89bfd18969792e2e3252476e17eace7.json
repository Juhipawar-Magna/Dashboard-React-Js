{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juhipawa\\\\Downloads\\\\Charts-main\\\\Charts-main\\\\src\\\\components\\\\StackedBarChart.js\";\nimport React, { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS } from \"chart.js/auto\";\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BarChart(_ref) {\n  var _s = $RefreshSig$();\n  let {\n    chartData\n  } = _ref;\n  const StackedBarChart = () => {\n    _s();\n    const [data, setData] = useState({\n      labels: [\"User 1\", \"User 2\", \"User 3\", \"User 4\", \"User 5\", \"User 6\", \"User 7\", \"User 8\"],\n      datasets: [{\n        label: '# of votes',\n        data: [5, 8, 4, 4, 8, 11, 2, 7, 5, 6],\n        backgroundColor: [\"rgba(255, 99, 132)\", \"rgba(54, 162, 235)\", \"rgba(255, 206, 86)\", \"rgba(75, 192, 192)\", \"rgba(153, 102, 255)\", \"rgba(60, 179, 113)\", \"rgba(210, 210, 210)\", \"rgba(106, 90, 205)\", \"rgba(255, 99, 71)\", \"rgba(255, 165, 0)\"],\n        hoverBackgroundColor: [\"rgb(255,255,255)\", \"rgb(255,255,255)\", \"rgb(255,255,255)\", \"rgb(255,255,255)\", \"rgb(255,255,255)\", \"rgb(255,255,255)\", \"rgb(255,255,255)\", \"rgb(255,255,255)\", \"rgb(255,255,255)\", \"rgb(255,255,255)\"]\n      }\n      /*{\r\n        label: \"State 1\", \r\n        backgroundColor: \"#FF6384\",\r\n        data: [4, 5, 4, 3, 2 , 11, 5, 8, 5, 6],\r\n      \r\n        label: \"State 2\",\r\n        backgroundColor: \"#36A2EB\",\r\n        data: [2, 3, 2, 5, 6, 7, 5, 6, 2, 1],\r\n      \r\n        label: \"State 3\",\r\n        backgroundColor: \"#f3ba2f\",\r\n        data: [3, 2, 3, 7, 2, 5, 1, 4, 3, 4],\r\n      \n        label: \"State 4\",\r\n        backgroundColor: \"#2a71d0\",\r\n        data: [1, 6, 5, 2, 1, 5, 8, 3, 4, 1],\r\n      \n        label: \"State 5\",\r\n        backgroundColor: \"#ee82ee\",\r\n        data: [1, 6, 7, 2, 1, 6, 8, 2, 7, 1],\r\n      \r\n        label: \"State 6\",\r\n        backgroundColor: \"#3cb371\",\r\n        data: [1, 4, 5, 7, 1, 4, 5, 7, 3, 9],\r\n      \r\n        label: \"State 7\",\r\n        backgroundColor: \"#6a5acd\",\r\n        data: [7, 2, 7, 2, 1, 5, 4, 8, 3, 6],\r\n      \r\n        label: \"State 8\",\r\n        backgroundColor: \"#ffa500\",\r\n        data: [3, 6, 4, 1, 1, 6, 4, 2, 8, 3],\r\n      \r\n        label: \"State 9\",\r\n        backgroundColor: \"#616161\",\r\n        data: [1, 7, 5, 4, 1, 5, 7, 2, 4, 6],\r\n      \n        label: \"State 10\",\r\n        backgroundColor: \"#b4b4b4\",\r\n        data: [ 6, 8, 4, 2, 9, 7, 3, 4, 1, 7],\r\n      },*/]\n    });\n\n    const options = {\n      scales: {\n        xAxes: [{\n          stacked: true\n        }],\n        yAxes: [{\n          ticks: {\n            beginATZero: true\n          },\n          stacked: true\n        }]\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(StackedBar, {\n        data: data,\n        height: 50,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this);\n  };\n  _s(StackedBarChart, \"JJQjP2LUqmjIhBhTiLch5uLOdlI=\");\n}\n_c = BarChart;\n;\nexport default StackedBarChart;\n\n/*import React from \"react\";\r\nimport Chart from 'react-apexcharts';\r\nfunction Stackedbarchart()\r\n{\r\n    return(<React.Fragment><div className=\"Charts\"><h2>Stacked bar chart in react using apexcharts</h2><Chart\r\n                type=\"bar\"\r\n                width={1349}\r\n                height={560}\r\n                series={[\r\n                    {\r\n                        name:\"state 1\",\r\n                        data:[4, 5, 4, 3,2],\r\n                        //color: '#f90000'\r\n                    },\r\n                    {\r\n                        name:\"state 2\",\r\n                        data:[2, 3, 2, 5,6],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 3\",\r\n                        data:[3, 2, 3, 7,2],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 4\",\r\n                        data:[1, 4, 5, 4,6],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 5\",\r\n                        data:[3, 6, 3, 2,4],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 6\",\r\n                        data:[6, 2, 5, 8,1],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 7\",\r\n                        data:[2, 6, 7, 2,1],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 8\",\r\n                        data:[4, 5, 7, 4,5],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 9\",\r\n                        data:[1, 6, 6, 2,4],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 10\",\r\n                        data:[2, 5, 2, 3,1],\r\n                       // color: '#000000'\r\n                    }\r\n                ]}\r\n                options={{\r\n                    title:{\r\n                        text:\"work status\"\r\n                    },\r\n                    chart:{\r\n                        stacked:true,\r\n                    },\r\n                    plotOptions:{\r\n                        bar:{\r\n                            horizontal:true,\r\n                            columnWidth:'100%'\r\n                          }\r\n                    },\r\n                    stroke: {\r\n                        width: 1,\r\n                    },\r\n                    xaxis:{\r\n                        title:{\r\n                            text:\"work status\"\r\n                        },\r\n                        categories:[\"User 1\", \"User 2\", \"User 3\", \"User 4\",\"User 5\",\"User 6\",\"User 7\",\"User 8\"]\r\n                    },\r\n                    yaxis:{\r\n                        title:{\r\n                            text:\"Data in state level\"\r\n                        },\r\n                    },\r\n                    legend:{\r\n                        position: 'bottom'\r\n                    },\r\n                    dataLabels:{\r\n                        enabled:true,\r\n                    },\r\n                    grid: {\r\n                        show:true,\r\n                        xaxis:{\r\n                            lines:{\r\n                                show:false\r\n                            }\r\n                        },\r\n                        yaxis:{\r\n                            lines:{\r\n                                show:false\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n                /></div></React.Fragment>\r\n    );\r\n}\r\nexport default Stackedbarchart;*/\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useState","Bar","Chart","ChartJS","BarChart","chartData","StackedBarChart","data","setData","labels","datasets","label","backgroundColor","hoverBackgroundColor","options","scales","xAxes","stacked","yAxes","ticks","beginATZero"],"sources":["C:/Users/juhipawa/Downloads/Charts-main/Charts-main/src/components/StackedBarChart.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS } from \"chart.js/auto\";\r\nimport Chart from 'react-apexcharts';\r\n\r\nfunction BarChart({ chartData }) {\r\n  const StackedBarChart = () => {\r\n  const [data, setData] = useState({\r\n    labels: [\"User 1\", \"User 2\", \"User 3\", \"User 4\",\"User 5\",\"User 6\",\"User 7\",\"User 8\",],\r\n    datasets: [ \r\n      {\r\n        label:'# of votes',\r\n        data: [5, 8, 4, 4, 8, 11, 2, 7, 5, 6],\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132)\",\r\n          \"rgba(54, 162, 235)\",\r\n          \"rgba(255, 206, 86)\",\r\n          \"rgba(75, 192, 192)\",\r\n          \"rgba(153, 102, 255)\",\r\n          \"rgba(60, 179, 113)\",\r\n          \"rgba(210, 210, 210)\",\r\n          \"rgba(106, 90, 205)\",\r\n          \"rgba(255, 99, 71)\",\r\n          \"rgba(255, 165, 0)\",\r\n\r\n        ],\r\n        hoverBackgroundColor: [\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n        ],\r\n      },\r\n      /*{\r\n        label: \"State 1\", \r\n        backgroundColor: \"#FF6384\",\r\n        data: [4, 5, 4, 3, 2 , 11, 5, 8, 5, 6],\r\n      \r\n        label: \"State 2\",\r\n        backgroundColor: \"#36A2EB\",\r\n        data: [2, 3, 2, 5, 6, 7, 5, 6, 2, 1],\r\n      \r\n        label: \"State 3\",\r\n        backgroundColor: \"#f3ba2f\",\r\n        data: [3, 2, 3, 7, 2, 5, 1, 4, 3, 4],\r\n     \r\n        label: \"State 4\",\r\n        backgroundColor: \"#2a71d0\",\r\n        data: [1, 6, 5, 2, 1, 5, 8, 3, 4, 1],\r\n     \r\n        label: \"State 5\",\r\n        backgroundColor: \"#ee82ee\",\r\n        data: [1, 6, 7, 2, 1, 6, 8, 2, 7, 1],\r\n      \r\n        label: \"State 6\",\r\n        backgroundColor: \"#3cb371\",\r\n        data: [1, 4, 5, 7, 1, 4, 5, 7, 3, 9],\r\n      \r\n        label: \"State 7\",\r\n        backgroundColor: \"#6a5acd\",\r\n        data: [7, 2, 7, 2, 1, 5, 4, 8, 3, 6],\r\n      \r\n        label: \"State 8\",\r\n        backgroundColor: \"#ffa500\",\r\n        data: [3, 6, 4, 1, 1, 6, 4, 2, 8, 3],\r\n      \r\n        label: \"State 9\",\r\n        backgroundColor: \"#616161\",\r\n        data: [1, 7, 5, 4, 1, 5, 7, 2, 4, 6],\r\n     \r\n        label: \"State 10\",\r\n        backgroundColor: \"#b4b4b4\",\r\n        data: [ 6, 8, 4, 2, 9, 7, 3, 4, 1, 7],\r\n      },*/      \r\n    ],\r\n  });\r\n\r\n  const options = {\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          stacked: true,\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {beginATZero: true },\r\n          stacked: true,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <StackedBar data={data}  height={50} options={options} />\r\n    </div>\r\n  );\r\n}\r\n};\r\n\r\nexport default StackedBarChart;\r\n\r\n\r\n\r\n\r\n/*import React from \"react\";\r\nimport Chart from 'react-apexcharts';\r\nfunction Stackedbarchart()\r\n{\r\n    return(<React.Fragment><div className=\"Charts\"><h2>Stacked bar chart in react using apexcharts</h2><Chart\r\n                type=\"bar\"\r\n                width={1349}\r\n                height={560}\r\n                series={[\r\n                    {\r\n                        name:\"state 1\",\r\n                        data:[4, 5, 4, 3,2],\r\n                        //color: '#f90000'\r\n                    },\r\n                    {\r\n                        name:\"state 2\",\r\n                        data:[2, 3, 2, 5,6],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 3\",\r\n                        data:[3, 2, 3, 7,2],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 4\",\r\n                        data:[1, 4, 5, 4,6],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 5\",\r\n                        data:[3, 6, 3, 2,4],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 6\",\r\n                        data:[6, 2, 5, 8,1],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 7\",\r\n                        data:[2, 6, 7, 2,1],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 8\",\r\n                        data:[4, 5, 7, 4,5],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 9\",\r\n                        data:[1, 6, 6, 2,4],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 10\",\r\n                        data:[2, 5, 2, 3,1],\r\n                       // color: '#000000'\r\n                    }\r\n                ]}\r\n                options={{\r\n                    title:{\r\n                        text:\"work status\"\r\n                    },\r\n                    chart:{\r\n                        stacked:true,\r\n                    },\r\n                    plotOptions:{\r\n                        bar:{\r\n                            horizontal:true,\r\n                            columnWidth:'100%'\r\n                          }\r\n                    },\r\n                    stroke: {\r\n                        width: 1,\r\n                    },\r\n                    xaxis:{\r\n                        title:{\r\n                            text:\"work status\"\r\n                        },\r\n                        categories:[\"User 1\", \"User 2\", \"User 3\", \"User 4\",\"User 5\",\"User 6\",\"User 7\",\"User 8\"]\r\n                    },\r\n                    yaxis:{\r\n                        title:{\r\n                            text:\"Data in state level\"\r\n                        },\r\n                    },\r\n                    legend:{\r\n                        position: 'bottom'\r\n                    },\r\n                    dataLabels:{\r\n                        enabled:true,\r\n                    },\r\n                    grid: {\r\n                        show:true,\r\n                        xaxis:{\r\n                            lines:{\r\n                                show:false\r\n                            }\r\n                        },\r\n                        yaxis:{\r\n                            lines:{\r\n                                show:false\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n                /></div></React.Fragment>\r\n    );\r\n}\r\nexport default Stackedbarchart;*/\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,IAAIC,OAAO,QAAQ,eAAe;AAChD,OAAOD,KAAK,MAAM,kBAAkB;AAAC;AAErC,SAASE,QAAQ,OAAgB;EAAA;EAAA,IAAf;IAAEC;EAAU,CAAC;EAC7B,MAAMC,eAAe,GAAG,MAAM;IAAA;IAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;MAC/BS,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAC,QAAQ,EAAC,QAAQ,EAAC,QAAQ,EAAC,QAAQ,CAAE;MACrFC,QAAQ,EAAE,CACR;QACEC,KAAK,EAAC,YAAY;QAClBJ,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACrCK,eAAe,EAAE,CACf,oBAAoB,EACpB,oBAAoB,EACpB,oBAAoB,EACpB,oBAAoB,EACpB,qBAAqB,EACrB,oBAAoB,EACpB,qBAAqB,EACrB,oBAAoB,EACpB,mBAAmB,EACnB,mBAAmB,CAEpB;QACDC,oBAAoB,EAAE,CACpB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB;MAEtB;MACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAxCM;IA0CJ,CAAC,CAAC;;IAEF,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE;QACNC,KAAK,EAAE,CACL;UACEC,OAAO,EAAE;QACX,CAAC,CACF;QACDC,KAAK,EAAE,CACL;UACEC,KAAK,EAAE;YAACC,WAAW,EAAE;UAAK,CAAC;UAC3BH,OAAO,EAAE;QACX,CAAC;MAEL;IACF,CAAC;IAED,oBACE;MAAA,uBACE,QAAC,UAAU;QAAC,IAAI,EAAEV,IAAK;QAAE,MAAM,EAAE,EAAG;QAAC,OAAO,EAAEO;MAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACrD;EAEV,CAAC;EAAA,GAlGOR,eAAe;AAmGvB;AAAC,KApGQF,QAAQ;AAoGhB;AAED,eAAeE,eAAe},"metadata":{},"sourceType":"module","externalDependencies":[]}