{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juhipawa\\\\Documents\\\\jkp\\\\Charts-main\\\\src\\\\components\\\\StackedBarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ReactApexChart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StackedBarChart = () => {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  const [stateLevels, setStateLevels] = useState([]);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:8000/api/Items/');\n        const data = response.data;\n        const levels = [...new Set(data.map(item => item.feature_state))];\n        const users = [...new Set(data.map(item => item.assigned_user))];\n        const chartData = levels.map(state => ({\n          name: state,\n          data: users.map(user => 0)\n        }));\n        data.forEach(item => {\n          const stateIndex = levels.indexOf(item.feature_state);\n          const userIndex = users.indexOf(item.assigned_user);\n          chartData[stateIndex].data[userIndex] += 1;\n        });\n        setStateLevels(levels);\n        setChartData(chartData);\n        setUsers(users);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n  const options = {\n    title: {\n      text: \"Users BarChart\"\n    },\n    chart: {\n      type: 'bar',\n      stacked: true\n    },\n    xaxis: {\n      title: {\n        text: \"state level\"\n      },\n      categories: users\n    },\n    yaxis: {\n      title: {\n        text: \"Users\"\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true\n      }\n    },\n    stroke: {\n      width: 2\n    },\n    legend: {\n      position: 'right'\n    },\n    dataLabels: {\n      enabled: true\n    },\n    grid: {\n      show: true,\n      xaxis: {\n        lines: {\n          show: false\n        }\n      },\n      yaxis: {\n        lines: {\n          show: false\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Work Status\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to Stacked Bar Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: options,\n      series: chartData,\n      type: \"bar\",\n      height: 560,\n      width: 1349\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(StackedBarChart, \"UEj74Fkk9BpGQ42UbQiyNmchNSg=\");\n_c = StackedBarChart;\nexport default StackedBarChart;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import ReactApexChart from 'react-apexcharts';\n\n// const StackedBarChart = () => {\n//   const [chartData, setChartData] = useState([]);\n//   const [stateLevels, setStateLevels] = useState([]);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await axios.get('http://127.0.0.1:8000/api/Items/');\n//         const data = response.data;\n\n//         // Extract the state levels and assigned users from the API response\n//         const levels = [...new Set(data.map((item) => item.feature_state))];\n//         const users = [...new Set(data.map((item) => item.assigned_user))];\n\n//         // Initialize the chart data array\n//         const chartData = levels.map((state) => ({\n//           name: state,\n//           data: users.map((user) => 0),\n//         }));\n\n//         // Update the chart data with the state level counts\n//         data.forEach((item) => {\n//           const stateIndex = levels.indexOf(item.feature_state);\n//           const userIndex = users.indexOf(item.assigned_user);\n//           chartData[stateIndex].data[userIndex] += 1;\n//         });\n\n//         setStateLevels(levels);\n//         setChartData(chartData);\n//       } catch (error) {\n//         console.log(error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   const options = {\n//     title:{\n//       text:\"Users BarChart\"\n//     },\n//     chart: {\n//       type: 'bar',\n//       stacked: true,\n//     },\n//     xaxis:{\n//       title:{\n//           text:\"state level\"\n//       },\n//       categories:[\"User 1\", \"User 2\", \"User 3\", \"User 4\",\"User 5\",\"User 6\",\"User 7\",\"User 8\",\"User 9\",\"User 10\"]\n//     },\n//     yaxis:{\n//       title:{\n//           text:\"Users\"\n//       },\n//     },\n//     plotOptions: {\n//       bar: {\n//         horizontal: true,\n//       },\n//     },\n//     stroke: {\n//       width: 5,\n//   },\n//     legend: {\n//       position: 'right',\n//     },\n//     dataLabels:{\n//       enabled:true,\n//     },\n//     // fill: {\n//     //   opacity: 1,\n//     // },\n//     grid: {\n//       show:true,\n//       xaxis:{\n//           lines:{\n//               show:false\n//           }\n//       },\n//       yaxis:{\n//           lines:{\n//               show:false\n//           }\n//       }\n//     }\n//   };\n\n//   return (\n//      <div className=\"Work Status\">\n//       <h2>Welcome to Stackedbarchart</h2>\n//       <ReactApexChart\n//         options={options}\n//         series={chartData}\n//         type=\"bar\"\n//         height={560}\n//         width={1349}\n//       />\n//     </div>\n//   );\n// };\n\n// export default StackedBarChart;\n\n// import React from \"react\";\n// import Chart from 'react-apexcharts';\n// function Stackedbarchart()\n// {\n//     return(<React.Fragment><div className=\"work status\"><h2>Welcome to Stackedbarchart</h2><Chart\n//                 type=\"bar\"\n//                 width={1349}\n//                 height={560}\n//                 series={[\n//                   {\n//                     name:\"state 1\",\n//                     data:[4, 5, 4, 3, 2, 7, 5, 2],\n//                     //color: '#f90000'\n//                 },\n//                 {\n//                     name:\"state 2\",\n//                     data:[2, 3, 2, 5, 6, 5, 1, 6],\n//                    // color: '#000000'\n//                 },\n//                 {\n//                     name:\"state 3\",\n//                     data:[3, 2, 3, 7, 2, 4, 5, 4],\n//                    // color: '#000000'\n//                 },\n//                 {\n//                     name:\"state 4\",\n//                     data:[6, 2, 5, 8, 1, 4, 5, 7],\n//                    // color: '#000000'\n//                 },\n//                 {\n//                     name:\"state 5\",\n//                     data:[3, 6, 3, 2, 4, 2, 5, 2],\n//                    // color: '#000000'\n//                 },\n//                 {\n//                     name:\"state 6\",\n//                     data:[6, 2, 5, 8, 1, 1, 6, 6],\n//                    // color: '#000000'\n//                 },\n//                 {\n//                     name:\"state 7\",\n//                     data:[2, 6, 7, 2, 1, 6, 2, 5],\n//                    // color: '#000000'\n//                 },\n//                 {\n//                     name:\"state 8\",\n//                     data:[4, 5, 7, 4, 5, 6, 2, 5],\n//                    // color: '#000000'\n//                 },\n//                 {\n//                     name:\"state 9\",\n//                     data:[1, 6, 6, 2, 4, 3, 2, 3],\n//                    // color: '#000000'\n//                 },\n//                 {\n//                     name:\"state 10\",\n//                     data:[2, 5, 2, 3, 1, 3, 6, 3],\n//                    // color: '#000000'\n//                 }\n//                 ]}\n//                 options={{\n// title:{\n//     text:\"Employee BarChart\"\n// },\n//                     chart:{\n//                         stacked:true,\n//                     },\n//                     plotOptions:{\n//                         bar:{\n//                             horizontal:true,\n//                             columnWidth:'100%'\n//                           }\n//                     },\n// stroke: {\n//     width: 5,\n// },\n// xaxis:{\n//     title:{\n//         text:\"state level\"\n//     },\n//     categories:[\"User 1\", \"User 2\", \"User 3\", \"User 4\",\"User 5\",\"User 6\",\"User 7\",\"User 8\"]\n// },\n// yaxis:{\n//     title:{\n//         text:\"Users\"\n//     },\n// },\n//                     legend:{\n//                         position: 'right'\n//                     },\n// dataLabels:{\n//     enabled:true,\n// },\n// grid: {\n//     show:true,\n//     xaxis:{\n//         lines:{\n//             show:false\n//         }\n//     },\n//     yaxis:{\n//         lines:{\n//             show:false\n//         }\n//     }\n//                     }\n//                 }}\n//                 /></div></React.Fragment>\n//     );\n// }\n\n/*import React, { useState } from \"react\";\r\nimport {\r\n  chart as ChartJS,\r\n  categoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js'\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst StackedBarchart = () => {\r\n  const [data, setData] = useState({\r\n    labels: [\"User 1\", \"User 2\", \"User 3\", \"User 4\",\"User 5\",\"User 6\",\"User 7\",\"User 8\"],\r\n    datasets: [ \r\n      \r\n      {\r\n        label: \"State 1\", \r\n        backgroundColor: \"#FF6384\",\r\n        data: [4, 5, 4, 3, 2],\r\n      },\r\n      {\r\n        label: \"State 2\",\r\n        backgroundColor: \"#36A2EB\",\r\n        data: [2, 3, 2, 5, 6, 7, 5],\r\n      },\r\n      {\r\n        label: \"State 3\",\r\n        backgroundColor: \"#f3ba2f\",\r\n        data: [3, 2, 3, 7, 2, 5, 1, 4, 3, 4],\r\n      },\r\n      {\r\n        label: \"State 4\",\r\n        backgroundColor: \"#2a71d0\",\r\n        data: [1],\r\n      },\r\n      {\r\n        label: \"State 5\",\r\n        backgroundColor: \"#ee82ee\",\r\n        data: [1],\r\n      },\r\n      {\r\n        label: \"State 6\",\r\n        backgroundColor: \"#3cb371\",\r\n        data: [1, 4, 5, 7, 1, 4, 5, 7, 3, 9],\r\n      },\r\n      {\r\n        label: \"State 7\",\r\n        backgroundColor: \"#6a5acd\",\r\n        data: [7, 2, 7, 2, 1, 5, 4, 8, 3, 6],\r\n      },\r\n      {\r\n        label: \"State 8\",\r\n        backgroundColor: \"#ffa500\",\r\n        data: [3, 6, 4, 1, 1, 6, 4, 2, 8, 3],\r\n      },\r\n      {\r\n        label: \"State 9\",\r\n        backgroundColor: \"#616161\",\r\n        data: [1, 7, 5, 4, 1, 5, 7, 2, 4, 6],\r\n      },\r\n      {        \r\n        label: \"State 10\",\r\n        backgroundColor: \"#b4b4b4\",\r\n        data: [ 6, 8, 4, 2, 9, 7, 3, 4, 1, 7],\r\n\r\n      },      \r\n    ],\r\n  });\r\n\r\n  const options = {\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          stacked: true,\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {beginATZero: true },\r\n          stacked: true,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Bar data={data}  height={0} options={options} />\r\n    </div>\r\n  );\r\n};*/\n\n// export default Stackedbarchart;\nvar _c;\n$RefreshReg$(_c, \"StackedBarChart\");","map":{"version":3,"names":["React","useEffect","useState","axios","ReactApexChart","StackedBarChart","chartData","setChartData","stateLevels","setStateLevels","users","setUsers","fetchData","response","get","data","levels","Set","map","item","feature_state","assigned_user","state","name","user","forEach","stateIndex","indexOf","userIndex","error","console","log","options","title","text","chart","type","stacked","xaxis","categories","yaxis","plotOptions","bar","horizontal","stroke","width","legend","position","dataLabels","enabled","grid","show","lines"],"sources":["C:/Users/juhipawa/Documents/jkp/Charts-main/src/components/StackedBarChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\nconst StackedBarChart = () => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [stateLevels, setStateLevels] = useState([]);\r\n  const [users, setUsers] = useState([]); \r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:8000/api/Items/');\r\n        const data = response.data;\r\n\r\n       \r\n        const levels = [...new Set(data.map((item) => item.feature_state))];\r\n        const users = [...new Set(data.map((item) => item.assigned_user))];\r\n\r\n        \r\n        const chartData = levels.map((state) => ({\r\n          name: state,\r\n          data: users.map((user) => 0),\r\n        }));\r\n\r\n       \r\n        data.forEach((item) => {\r\n          const stateIndex = levels.indexOf(item.feature_state);\r\n          const userIndex = users.indexOf(item.assigned_user);\r\n          chartData[stateIndex].data[userIndex] += 1;\r\n        });\r\n\r\n        setStateLevels(levels);\r\n        setChartData(chartData);\r\n        setUsers(users); \r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const options = {\r\n    title:{\r\n      text:\"Users BarChart\"\r\n    },\r\n    chart: {\r\n      type: 'bar',\r\n      stacked: true,\r\n    },\r\n    xaxis:{\r\n      title:{\r\n          text:\"state level\"\r\n      },\r\n      categories: users, \r\n    },\r\n    yaxis:{\r\n      title:{\r\n          text:\"Users\"\r\n      },\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n      },\r\n    },\r\n    stroke: {\r\n      width: 2,\r\n    },\r\n    legend: {\r\n      position: 'right',\r\n    },\r\n    dataLabels:{\r\n      enabled:true,\r\n    },\r\n    grid: {\r\n      show:true,\r\n      xaxis:{\r\n          lines:{\r\n              show:false\r\n          }\r\n      },\r\n      yaxis:{\r\n          lines:{\r\n              show:false\r\n          }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Work Status\">\r\n      <h2>Welcome to Stacked Bar Chart</h2>\r\n      <ReactApexChart\r\n        options={options}\r\n        series={chartData}\r\n        type=\"bar\"\r\n        height={560}\r\n        width={1349}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StackedBarChart;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import ReactApexChart from 'react-apexcharts';\r\n\r\n// const StackedBarChart = () => {\r\n//   const [chartData, setChartData] = useState([]);\r\n//   const [stateLevels, setStateLevels] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://127.0.0.1:8000/api/Items/');\r\n//         const data = response.data;\r\n\r\n//         // Extract the state levels and assigned users from the API response\r\n//         const levels = [...new Set(data.map((item) => item.feature_state))];\r\n//         const users = [...new Set(data.map((item) => item.assigned_user))];\r\n\r\n//         // Initialize the chart data array\r\n//         const chartData = levels.map((state) => ({\r\n//           name: state,\r\n//           data: users.map((user) => 0),\r\n//         }));\r\n\r\n//         // Update the chart data with the state level counts\r\n//         data.forEach((item) => {\r\n//           const stateIndex = levels.indexOf(item.feature_state);\r\n//           const userIndex = users.indexOf(item.assigned_user);\r\n//           chartData[stateIndex].data[userIndex] += 1;\r\n//         });\r\n\r\n//         setStateLevels(levels);\r\n//         setChartData(chartData);\r\n//       } catch (error) {\r\n//         console.log(error);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const options = {\r\n//     title:{\r\n//       text:\"Users BarChart\"\r\n//     },\r\n//     chart: {\r\n//       type: 'bar',\r\n//       stacked: true,\r\n//     },\r\n//     xaxis:{\r\n//       title:{\r\n//           text:\"state level\"\r\n//       },\r\n//       categories:[\"User 1\", \"User 2\", \"User 3\", \"User 4\",\"User 5\",\"User 6\",\"User 7\",\"User 8\",\"User 9\",\"User 10\"]\r\n//     },\r\n//     yaxis:{\r\n//       title:{\r\n//           text:\"Users\"\r\n//       },\r\n//     },\r\n//     plotOptions: {\r\n//       bar: {\r\n//         horizontal: true,\r\n//       },\r\n//     },\r\n//     stroke: {\r\n//       width: 5,\r\n//   },\r\n//     legend: {\r\n//       position: 'right',\r\n//     },\r\n//     dataLabels:{\r\n//       enabled:true,\r\n//     },\r\n//     // fill: {\r\n//     //   opacity: 1,\r\n//     // },\r\n//     grid: {\r\n//       show:true,\r\n//       xaxis:{\r\n//           lines:{\r\n//               show:false\r\n//           }\r\n//       },\r\n//       yaxis:{\r\n//           lines:{\r\n//               show:false\r\n//           }\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//      <div className=\"Work Status\">\r\n//       <h2>Welcome to Stackedbarchart</h2>\r\n//       <ReactApexChart\r\n//         options={options}\r\n//         series={chartData}\r\n//         type=\"bar\"\r\n//         height={560}\r\n//         width={1349}\r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default StackedBarChart;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from \"react\";\r\n// import Chart from 'react-apexcharts';\r\n// function Stackedbarchart()\r\n// {\r\n//     return(<React.Fragment><div className=\"work status\"><h2>Welcome to Stackedbarchart</h2><Chart\r\n//                 type=\"bar\"\r\n//                 width={1349}\r\n//                 height={560}\r\n//                 series={[\r\n//                   {\r\n//                     name:\"state 1\",\r\n//                     data:[4, 5, 4, 3, 2, 7, 5, 2],\r\n//                     //color: '#f90000'\r\n//                 },\r\n//                 {\r\n//                     name:\"state 2\",\r\n//                     data:[2, 3, 2, 5, 6, 5, 1, 6],\r\n//                    // color: '#000000'\r\n//                 },\r\n//                 {\r\n//                     name:\"state 3\",\r\n//                     data:[3, 2, 3, 7, 2, 4, 5, 4],\r\n//                    // color: '#000000'\r\n//                 },\r\n//                 {\r\n//                     name:\"state 4\",\r\n//                     data:[6, 2, 5, 8, 1, 4, 5, 7],\r\n//                    // color: '#000000'\r\n//                 },\r\n//                 {\r\n//                     name:\"state 5\",\r\n//                     data:[3, 6, 3, 2, 4, 2, 5, 2],\r\n//                    // color: '#000000'\r\n//                 },\r\n//                 {\r\n//                     name:\"state 6\",\r\n//                     data:[6, 2, 5, 8, 1, 1, 6, 6],\r\n//                    // color: '#000000'\r\n//                 },\r\n//                 {\r\n//                     name:\"state 7\",\r\n//                     data:[2, 6, 7, 2, 1, 6, 2, 5],\r\n//                    // color: '#000000'\r\n//                 },\r\n//                 {\r\n//                     name:\"state 8\",\r\n//                     data:[4, 5, 7, 4, 5, 6, 2, 5],\r\n//                    // color: '#000000'\r\n//                 },\r\n//                 {\r\n//                     name:\"state 9\",\r\n//                     data:[1, 6, 6, 2, 4, 3, 2, 3],\r\n//                    // color: '#000000'\r\n//                 },\r\n//                 {\r\n//                     name:\"state 10\",\r\n//                     data:[2, 5, 2, 3, 1, 3, 6, 3],\r\n//                    // color: '#000000'\r\n//                 }\r\n//                 ]}\r\n//                 options={{\r\n                    // title:{\r\n                    //     text:\"Employee BarChart\"\r\n                    // },\r\n//                     chart:{\r\n//                         stacked:true,\r\n//                     },\r\n//                     plotOptions:{\r\n//                         bar:{\r\n//                             horizontal:true,\r\n//                             columnWidth:'100%'\r\n//                           }\r\n//                     },\r\n                    // stroke: {\r\n                    //     width: 5,\r\n                    // },\r\n                    // xaxis:{\r\n                    //     title:{\r\n                    //         text:\"state level\"\r\n                    //     },\r\n                    //     categories:[\"User 1\", \"User 2\", \"User 3\", \"User 4\",\"User 5\",\"User 6\",\"User 7\",\"User 8\"]\r\n                    // },\r\n                    // yaxis:{\r\n                    //     title:{\r\n                    //         text:\"Users\"\r\n                    //     },\r\n                    // },\r\n//                     legend:{\r\n//                         position: 'right'\r\n//                     },\r\n                    // dataLabels:{\r\n                    //     enabled:true,\r\n                    // },\r\n                    // grid: {\r\n                    //     show:true,\r\n                    //     xaxis:{\r\n                    //         lines:{\r\n                    //             show:false\r\n                    //         }\r\n                    //     },\r\n                    //     yaxis:{\r\n                    //         lines:{\r\n                    //             show:false\r\n                    //         }\r\n                    //     }\r\n//                     }\r\n//                 }}\r\n//                 /></div></React.Fragment>\r\n//     );\r\n// }\r\n\r\n\r\n\r\n/*import React, { useState } from \"react\";\r\nimport {\r\n  chart as ChartJS,\r\n  categoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js'\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst StackedBarchart = () => {\r\n  const [data, setData] = useState({\r\n    labels: [\"User 1\", \"User 2\", \"User 3\", \"User 4\",\"User 5\",\"User 6\",\"User 7\",\"User 8\"],\r\n    datasets: [ \r\n      \r\n      {\r\n        label: \"State 1\", \r\n        backgroundColor: \"#FF6384\",\r\n        data: [4, 5, 4, 3, 2],\r\n      },\r\n      {\r\n        label: \"State 2\",\r\n        backgroundColor: \"#36A2EB\",\r\n        data: [2, 3, 2, 5, 6, 7, 5],\r\n      },\r\n      {\r\n        label: \"State 3\",\r\n        backgroundColor: \"#f3ba2f\",\r\n        data: [3, 2, 3, 7, 2, 5, 1, 4, 3, 4],\r\n      },\r\n      {\r\n        label: \"State 4\",\r\n        backgroundColor: \"#2a71d0\",\r\n        data: [1],\r\n      },\r\n      {\r\n        label: \"State 5\",\r\n        backgroundColor: \"#ee82ee\",\r\n        data: [1],\r\n      },\r\n      {\r\n        label: \"State 6\",\r\n        backgroundColor: \"#3cb371\",\r\n        data: [1, 4, 5, 7, 1, 4, 5, 7, 3, 9],\r\n      },\r\n      {\r\n        label: \"State 7\",\r\n        backgroundColor: \"#6a5acd\",\r\n        data: [7, 2, 7, 2, 1, 5, 4, 8, 3, 6],\r\n      },\r\n      {\r\n        label: \"State 8\",\r\n        backgroundColor: \"#ffa500\",\r\n        data: [3, 6, 4, 1, 1, 6, 4, 2, 8, 3],\r\n      },\r\n      {\r\n        label: \"State 9\",\r\n        backgroundColor: \"#616161\",\r\n        data: [1, 7, 5, 4, 1, 5, 7, 2, 4, 6],\r\n      },\r\n      {        \r\n        label: \"State 10\",\r\n        backgroundColor: \"#b4b4b4\",\r\n        data: [ 6, 8, 4, 2, 9, 7, 3, 4, 1, 7],\r\n\r\n      },      \r\n    ],\r\n  });\r\n\r\n  const options = {\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          stacked: true,\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {beginATZero: true },\r\n          stacked: true,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Bar data={data}  height={0} options={options} />\r\n    </div>\r\n  );\r\n};*/\r\n\r\n// export default Stackedbarchart;\r\n"],"mappings":"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},"metadata":{},"sourceType":"module","externalDependencies":[]}