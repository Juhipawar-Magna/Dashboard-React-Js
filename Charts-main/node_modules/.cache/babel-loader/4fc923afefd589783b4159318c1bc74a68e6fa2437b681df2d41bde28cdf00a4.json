{"ast":null,"code":"// import { useState, useEffect } from \"react\";\n// import { Button, Form } from \"react-bootstrap\";\n// import API from \"./API\";\n\n// function Additems({ onAdd }) {\n//   const [itemId, setItemId] = useState(null);\n//   const [itemnumber, setItemnumber] = useState(\"\");\n//   const [featurename, setFeaturename] = useState(\"\");\n//   const [featurestate, setFeaturestate] = useState(\"\");\n//   const [assignuser, setAssignuser] = useState([]);\n//   const [testexecuted, setTestexecuted] = useState(null);\n//   const [testpassed, setTestpassed] = useState(null);\n//   const [testfailed, setTestfailed] = useState(null);\n\n//   useEffect(() => {\n//     refreshItems();\n//   }, []);\n\n//   function refreshItems() {\n//     API.get(\"/\")\n//       .then((res) => {\n//         setItemnumber(res.data);\n//         setItemnumber(res[0].itemnumber);\n//         setFeaturename(res[0].featurename);\n//         setFeaturestate(res[0].featurestate);\n//         setItemId(res[0].id);\n//         setTestfailed(res[0].testfailed);\n//         setAssignuser(res[0].assignuser);\n//         setTestpassed(res[0].testpassed);\n//         setTestexecuted(res[0].testexecuted);\n//       })\n//       .catch(console.error);\n//   }\n\n//   function onSubmit(e) {\n//     e.preventDefault();\n//     let item = { itemnumber, featurename, featurestate, assignuser, testexecuted, testpassed, testfailed };\n//     API.post(\"/\", item).then(() => refreshItems());\n//   }\n\n//   function onUpdate(id) {\n//     let item = { itemnumber };\n//     API.patch(`/${id}/`, item).then((res) => refreshItems());\n//   }\n\n//   function onDelete(id) {\n//     API.delete(`/${id}/`).then((res) => refreshItems());\n//   }\n\n//   function selectItems(id) {\n//     let item= item.filter((Items) => Items.id === id)[0];\n//     setItemnumber(item.number);\n//     setFeaturename(item.name);\n//     setFeaturestate(item.state);\n//     setAssignuser(item.user);\n//     setTestexecuted(item.testexecuted);\n//     setTestpassed(item.testpassed);\n//     setTestfailed(item.testfailed);\n//     setItemId(item.itemId);\n//   }\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <div className=\"row\">\n//         <div className=\"col-md-4\">\n//           <h3 className=\"float-left\">Create a new Items</h3>\n//           <Form onSubmit={onSubmit} className=\"mt-4\">\n//             <Form.Group className=\"mb-3\" controlId=\"formBasicItemnumber\">\n//               <Form.Label>{itemId}itemnumber</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 placeholder=\"Enter Number\"\n//                 value={itemnumber}\n//                 onChange={(e) => setItemnumber(e.target.value)} />\n//             </Form.Group>\n\n//             <Form.Group className=\"mb-3\" controlId=\"formBasicFeaturename\">\n//               <Form.Label>featurename</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 placeholder=\"Enter name\"\n//                 value={featurename}\n//                 onChange={(e) => setFeaturename(e.target.value)} />\n//             </Form.Group>\n\n//             <Form.Group className=\"mb-3\" controlId=\"formBasicFeaturestate\">\n//               <Form.Label>featurestate</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 placeholder=\"Enter State\"\n//                 value={featurestate}\n//                 onChange={(e) => setFeaturestate(e.target.value)} />\n//             </Form.Group>\n\n//             <Form.Group className=\"mb-3\" controlId=\"formBasicAssignuser\">\n//               <Form.Label>assignuser</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 placeholder=\"Enter User\"\n//                 value={assignuser}\n//                 onChange={(e) => setAssignuser(e.target.value)} />\n//             </Form.Group>\n\n//             <Form.Group className=\"mb-3\" controlId=\"formBasicTestexecuted\">\n//               <Form.Label>testexecuted</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 placeholder=\"Enter testexecuted\"\n//                 value={testexecuted}\n//                 onChange={(e) => setTestexecuted(e.target.value)} />\n//             </Form.Group>\n\n//             <Form.Group className=\"mb-3\" controlId=\"formBasicTestpassed\">\n//               <Form.Label>testpassed</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 placeholder=\"Enter testpassed\"\n//                 value={testpassed}\n//                 onChange={(e) => setTestpassed(e.target.value)} />\n//             </Form.Group>\n\n//             <Form.Group className=\"mb-3\" controlId=\"formBasicTestfailed\">\n//               <Form.Label>testfailed</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 placeholder=\"Enter testfailed\"\n//                 value={testfailed}\n//                 onChange={(e) => setTestfailed(e.target.value)} />\n//             </Form.Group>\n\n//             <div className=\"float-right\">\n//               <Button\n//                 variant=\"primary\"\n//                 type=\"submit\"\n//                 onClick={onSubmit}\n//                 className=\"mx-2\"\n//               >\n//                 Save\n//               </Button>\n//               <Button\n//                 variant=\"primary\"\n//                 type=\"button\"\n//                 onClick={() => onUpdate(itemId)}\n//                 className=\"mx-2\"\n//               >\n//                 Update\n//               </Button>\n//             </div>\n//           </Form>\n//         </div>\n//         <div className=\"col-md-8 m\">\n//           <table class=\"table\">\n//             <thead>\n//               <tr>\n//                 <th scope=\"col\">#</th>\n//                 <th scope=\"col\">Item Number</th>\n//                 <th scope=\"col\">Feature Name</th>\n//                 <th scope=\"col\">Feature State</th>\n//                 <th scope=\"col\">Assign User</th>\n//                 <th scope=\"col\">Test Executed</th>\n//                 <th scope=\"col\">Test Passed</th>\n//                 <th scope=\"col\">Test Failed</th>\n//                 <th scope=\"col\"></th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {selectItems.map((item, index) => {\n//                 return (\n//                   <tr key=\"\">\n//                     <th scope=\"row\">{item.id}</th>\n//                     <td> {item.itemnumber}</td>\n//                     <td>{item.featurename}</td>\n//                     <td>{item.featurestate}</td>\n//                     <td>{item.assignuser}</td>\n//                     <td>{item.testexecuted}</td>\n//                     <td>{item.testpassed}</td>\n//                     <td>{item.testfailed}</td>\n//                     <td>\n//                       <i\n//                         className=\"fa fa-pencil-square text-primary d-inline\"\n//                         aria-hidden=\"true\"\n//                         onClick={() => selectItems(item.id)}\n//                       ></i>\n//                       <i\n//                         className=\"fa fa-trash-o text-danger d-inline mx-3\"\n//                         aria-hidden=\"true\"\n//                         onClick={() => onDelete(item.id)}\n//                       ></i>\n//                     </td>\n//                   </tr>\n//                 );\n//               })}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Additems;","map":{"version":3,"names":[],"sources":["C:/Users/juhipawa/Documents/Charts-main/src/components/Additems.js"],"sourcesContent":["// import { useState, useEffect } from \"react\";\r\n// import { Button, Form } from \"react-bootstrap\";\r\n// import API from \"./API\";\r\n\r\n\r\n\r\n// function Additems({ onAdd }) {\r\n//   const [itemId, setItemId] = useState(null);\r\n//   const [itemnumber, setItemnumber] = useState(\"\");\r\n//   const [featurename, setFeaturename] = useState(\"\");\r\n//   const [featurestate, setFeaturestate] = useState(\"\");\r\n//   const [assignuser, setAssignuser] = useState([]);\r\n//   const [testexecuted, setTestexecuted] = useState(null);\r\n//   const [testpassed, setTestpassed] = useState(null);\r\n//   const [testfailed, setTestfailed] = useState(null);\r\n\r\n\r\n//   useEffect(() => {\r\n//     refreshItems();\r\n//   }, []);\r\n\r\n//   function refreshItems() {\r\n//     API.get(\"/\")\r\n//       .then((res) => {\r\n//         setItemnumber(res.data);\r\n//         setItemnumber(res[0].itemnumber);\r\n//         setFeaturename(res[0].featurename);\r\n//         setFeaturestate(res[0].featurestate);\r\n//         setItemId(res[0].id);\r\n//         setTestfailed(res[0].testfailed);\r\n//         setAssignuser(res[0].assignuser);\r\n//         setTestpassed(res[0].testpassed);\r\n//         setTestexecuted(res[0].testexecuted);\r\n//       })\r\n//       .catch(console.error);\r\n//   }\r\n\r\n//   function onSubmit(e) {\r\n//     e.preventDefault();\r\n//     let item = { itemnumber, featurename, featurestate, assignuser, testexecuted, testpassed, testfailed };\r\n//     API.post(\"/\", item).then(() => refreshItems());\r\n//   }\r\n\r\n//   function onUpdate(id) {\r\n//     let item = { itemnumber };\r\n//     API.patch(`/${id}/`, item).then((res) => refreshItems());\r\n//   }\r\n\r\n//   function onDelete(id) {\r\n//     API.delete(`/${id}/`).then((res) => refreshItems());\r\n//   }\r\n\r\n//   function selectItems(id) {\r\n//     let item= item.filter((Items) => Items.id === id)[0];\r\n//     setItemnumber(item.number);\r\n//     setFeaturename(item.name);\r\n//     setFeaturestate(item.state);\r\n//     setAssignuser(item.user);\r\n//     setTestexecuted(item.testexecuted);\r\n//     setTestpassed(item.testpassed);\r\n//     setTestfailed(item.testfailed);\r\n//     setItemId(item.itemId);\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       <div className=\"row\">\r\n//         <div className=\"col-md-4\">\r\n//           <h3 className=\"float-left\">Create a new Items</h3>\r\n//           <Form onSubmit={onSubmit} className=\"mt-4\">\r\n//             <Form.Group className=\"mb-3\" controlId=\"formBasicItemnumber\">\r\n//               <Form.Label>{itemId}itemnumber</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"text\"\r\n//                 placeholder=\"Enter Number\"\r\n//                 value={itemnumber}\r\n//                 onChange={(e) => setItemnumber(e.target.value)} />\r\n//             </Form.Group>\r\n\r\n//             <Form.Group className=\"mb-3\" controlId=\"formBasicFeaturename\">\r\n//               <Form.Label>featurename</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"text\"\r\n//                 placeholder=\"Enter name\"\r\n//                 value={featurename}\r\n//                 onChange={(e) => setFeaturename(e.target.value)} />\r\n//             </Form.Group>\r\n\r\n//             <Form.Group className=\"mb-3\" controlId=\"formBasicFeaturestate\">\r\n//               <Form.Label>featurestate</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"text\"\r\n//                 placeholder=\"Enter State\"\r\n//                 value={featurestate}\r\n//                 onChange={(e) => setFeaturestate(e.target.value)} />\r\n//             </Form.Group>\r\n\r\n//             <Form.Group className=\"mb-3\" controlId=\"formBasicAssignuser\">\r\n//               <Form.Label>assignuser</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"text\"\r\n//                 placeholder=\"Enter User\"\r\n//                 value={assignuser}\r\n//                 onChange={(e) => setAssignuser(e.target.value)} />\r\n//             </Form.Group>\r\n\r\n//             <Form.Group className=\"mb-3\" controlId=\"formBasicTestexecuted\">\r\n//               <Form.Label>testexecuted</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"text\"\r\n//                 placeholder=\"Enter testexecuted\"\r\n//                 value={testexecuted}\r\n//                 onChange={(e) => setTestexecuted(e.target.value)} />\r\n//             </Form.Group>\r\n\r\n//             <Form.Group className=\"mb-3\" controlId=\"formBasicTestpassed\">\r\n//               <Form.Label>testpassed</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"text\"\r\n//                 placeholder=\"Enter testpassed\"\r\n//                 value={testpassed}\r\n//                 onChange={(e) => setTestpassed(e.target.value)} />\r\n//             </Form.Group>\r\n\r\n//             <Form.Group className=\"mb-3\" controlId=\"formBasicTestfailed\">\r\n//               <Form.Label>testfailed</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"text\"\r\n//                 placeholder=\"Enter testfailed\"\r\n//                 value={testfailed}\r\n//                 onChange={(e) => setTestfailed(e.target.value)} />\r\n//             </Form.Group>\r\n\r\n//             <div className=\"float-right\">\r\n//               <Button\r\n//                 variant=\"primary\"\r\n//                 type=\"submit\"\r\n//                 onClick={onSubmit}\r\n//                 className=\"mx-2\"\r\n//               >\r\n//                 Save\r\n//               </Button>\r\n//               <Button\r\n//                 variant=\"primary\"\r\n//                 type=\"button\"\r\n//                 onClick={() => onUpdate(itemId)}\r\n//                 className=\"mx-2\"\r\n//               >\r\n//                 Update\r\n//               </Button>\r\n//             </div>\r\n//           </Form>\r\n//         </div>\r\n//         <div className=\"col-md-8 m\">\r\n//           <table class=\"table\">\r\n//             <thead>\r\n//               <tr>\r\n//                 <th scope=\"col\">#</th>\r\n//                 <th scope=\"col\">Item Number</th>\r\n//                 <th scope=\"col\">Feature Name</th>\r\n//                 <th scope=\"col\">Feature State</th>\r\n//                 <th scope=\"col\">Assign User</th>\r\n//                 <th scope=\"col\">Test Executed</th>\r\n//                 <th scope=\"col\">Test Passed</th>\r\n//                 <th scope=\"col\">Test Failed</th>\r\n//                 <th scope=\"col\"></th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {selectItems.map((item, index) => {\r\n//                 return (\r\n//                   <tr key=\"\">\r\n//                     <th scope=\"row\">{item.id}</th>\r\n//                     <td> {item.itemnumber}</td>\r\n//                     <td>{item.featurename}</td>\r\n//                     <td>{item.featurestate}</td>\r\n//                     <td>{item.assignuser}</td>\r\n//                     <td>{item.testexecuted}</td>\r\n//                     <td>{item.testpassed}</td>\r\n//                     <td>{item.testfailed}</td>\r\n//                     <td>\r\n//                       <i\r\n//                         className=\"fa fa-pencil-square text-primary d-inline\"\r\n//                         aria-hidden=\"true\"\r\n//                         onClick={() => selectItems(item.id)}\r\n//                       ></i>\r\n//                       <i\r\n//                         className=\"fa fa-trash-o text-danger d-inline mx-3\"\r\n//                         aria-hidden=\"true\"\r\n//                         onClick={() => onDelete(item.id)}\r\n//                       ></i>\r\n//                     </td>\r\n//                   </tr>\r\n//                 );\r\n//               })}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Additems;"],"mappings":"AAAA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}