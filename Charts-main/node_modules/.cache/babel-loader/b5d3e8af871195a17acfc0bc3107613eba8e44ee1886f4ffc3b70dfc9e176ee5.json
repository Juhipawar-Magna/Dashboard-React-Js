{"ast":null,"code":"// import React, { useMemo } from \"react\";\n// import { useTable, useGlobalFilter, useFilters } from \"react-table\";\n// import { UserData } from \"./Data.js\";\n// import { COLUMNS } from \"./Columns\";\n// import \"./table.css\";\n\n// export const FilteringTable = () => {\n//   const columns = useMemo(() => COLUMNS, []);\n//   const data = useMemo(() => UserData, []);\n\n//   const {\n//     getTableProps,\n//     getTableBodyProps,\n//     headerGroups,\n//     footerGroups,\n//     rows,\n//     prepareRow,\n//     state,\n//     setGlobalfilter,\n//   } = useTable(\n//     {\n//       columns,\n//       data,\n//     },\n//     useFilters,\n//     // useGlobalFilter\n//   );\n\n//   // const { globalFilter } = state;\n\n//   return (\n//     <>\n//       {/* <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} /> */}\n//       <table {...getTableProps()}>\n//         <thead>\n//           {headerGroups.map((headerGroup) => (\n//             <tr {...headerGroup.getHeaderGroupProps()}>\n//               {headerGroup.headers.map((column) => (\n//                 <th {...column.getHeaderProps()}>\n//                   {column.render(\"Header\")}\n//                   <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\n//                 </th>\n//               ))}\n\n//             </tr>\n//           ))}\n//         </thead>\n//         <tbody {...getTableBodyProps()}>\n//           {rows.map((row) => {\n//             prepareRow(row);\n//             return (\n//               <tr {...row.getRowProps()}>\n//                 {row.cells.map((cell) => {\n//                   return (\n//                     <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n//                   );\n//                 })}\n//               </tr>\n//             );\n//           })}\n//         </tbody>\n//         <tfoot>\n//           {footerGroups.map((footerGroup) => (\n//             <tr {...footerGroup.getFooterGroupProps()}>\n//               {footerGroup.headers.map((column) => (\n//                 <td {...column.getFooterProps}>{column.render(\"Footer\")}</td>\n//               ))}\n//             </tr>\n//           ))}\n//         </tfoot>\n//       </table>\n//     </>\n//   );\n// };","map":{"version":3,"names":[],"sources":["C:/Users/juhipawa/Downloads/Charts-main/Charts-main/src/components/FilteringTable.js"],"sourcesContent":["// import React, { useMemo } from \"react\";\r\n// import { useTable, useGlobalFilter, useFilters } from \"react-table\";\r\n// import { UserData } from \"./Data.js\";\r\n// import { COLUMNS } from \"./Columns\";\r\n// import \"./table.css\";\r\n\r\n// export const FilteringTable = () => {\r\n//   const columns = useMemo(() => COLUMNS, []);\r\n//   const data = useMemo(() => UserData, []);\r\n\r\n//   const {\r\n//     getTableProps,\r\n//     getTableBodyProps,\r\n//     headerGroups,\r\n//     footerGroups,\r\n//     rows,\r\n//     prepareRow,\r\n//     state,\r\n//     setGlobalfilter,\r\n//   } = useTable(\r\n//     {\r\n//       columns,\r\n//       data,\r\n//     },\r\n//     useFilters,\r\n//     // useGlobalFilter\r\n//   );\r\n\r\n//   // const { globalFilter } = state;\r\n\r\n//   return (\r\n//     <>\r\n//       {/* <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} /> */}\r\n//       <table {...getTableProps()}>\r\n//         <thead>\r\n//           {headerGroups.map((headerGroup) => (\r\n//             <tr {...headerGroup.getHeaderGroupProps()}>\r\n//               {headerGroup.headers.map((column) => (\r\n//                 <th {...column.getHeaderProps()}>\r\n//                   {column.render(\"Header\")}\r\n//                   <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\r\n//                 </th>\r\n//               ))}\r\n              \r\n//             </tr>\r\n//           ))}\r\n//         </thead>\r\n//         <tbody {...getTableBodyProps()}>\r\n//           {rows.map((row) => {\r\n//             prepareRow(row);\r\n//             return (\r\n//               <tr {...row.getRowProps()}>\r\n//                 {row.cells.map((cell) => {\r\n//                   return (\r\n//                     <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n//                   );\r\n//                 })}\r\n//               </tr>\r\n//             );\r\n//           })}\r\n//         </tbody>\r\n//         <tfoot>\r\n//           {footerGroups.map((footerGroup) => (\r\n//             <tr {...footerGroup.getFooterGroupProps()}>\r\n//               {footerGroup.headers.map((column) => (\r\n//                 <td {...column.getFooterProps}>{column.render(\"Footer\")}</td>\r\n//               ))}\r\n//             </tr>\r\n//           ))}\r\n//         </tfoot>\r\n//       </table>\r\n//     </>\r\n//   );\r\n// };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}