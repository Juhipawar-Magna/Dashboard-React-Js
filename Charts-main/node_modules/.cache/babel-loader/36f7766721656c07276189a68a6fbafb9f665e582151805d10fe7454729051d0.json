{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juhipawa\\\\Downloads\\\\Charts-main\\\\Charts-main\\\\src\\\\components\\\\PieChart.js\",\n  _s = $RefreshSig$();\n/*import React, { useState } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Chart, registerables,ArcElement } from \"chart.js\";\r\nChart.register(...registerables);\r\nChart.register(ArcElement);\r\n\r\nconst PieChart = () => {\r\n  const [data, setData] = useState({\r\n    labels: [\"State 1\", \"State 2\", \"State 3\", \"State 4\", \"State 5\", \"State 6\" , \"State 7\", \"State 8\", \"State 9\", \"State 10\"],\r\n    datasets: [\r\n      {\r\n        data: [5, 8, 4, 4, 8, 11, 2, 7, 5, 6],\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132)\",\r\n          \"rgba(54, 162, 235)\",\r\n          \"rgba(255, 206, 86)\",\r\n          \"rgba(75, 192, 192)\",\r\n          \"rgba(153, 102, 255)\",\r\n          \"rgba(60, 179, 113)\",\r\n          \"rgba(210, 210, 210)\",\r\n          \"rgba(106, 90, 205)\",\r\n          \"rgba(255, 99, 71)\",\r\n          \"rgba(255, 165, 0)\",\r\n\r\n        ],\r\n        hoverBackgroundColor: [\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n        ],\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <div className=\"PieChart\" style={{ height: '30%' , width:'30%'}}>\r\n      <Pie data={data} options={{ maintainAspectRatio: true }} />\r\n    </div>\r\n  );\r\n};*/\n\nimport React, { useState } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { Chart as ChartJs, Tooltip, Title, ArcElement, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJs.register(Tooltip, Title, ArcElement, Legend);\nconst data = {\n  datasets: [{\n    data: [10, 20, 30],\n    backgroundColor: ['red', 'blue', 'yellow']\n  }],\n  // These labels appear in the legend and in the tooltips when hovering different arcs\n  labels: [\"State 1\", \"State 2\", \"State 3\", \"State 4\", \"State 5\", \"State 6\", \"State 7\", \"State 8\", \"State 9\", \"State 10\"]\n};\nfunction App() {\n  _s();\n  const [data, setData] = useState({\n    datasets: [{\n      data: [10, 20, 30],\n      backgroundColor: ['red', 'blue', 'yellow']\n    }],\n    labels: ['Red', 'Yellow', 'Blue']\n  });\n  useEffect(() => {\n    const fetchData = () => {\n      fetch('https://jsonplaceholder.typicode.com/users').then(data => {\n        const res = data.json();\n        return res;\n      }).then(res => {\n        console.log(\"resss\", res);\n        const label = [];\n        const data = [];\n        for (var i of res) {\n          label.push(i.name);\n          data.push(i.id);\n        }\n        setData({\n          datasets: [{\n            data: data,\n            backgroundColor: ['red', 'blue', 'yellow']\n          }],\n          labels: label\n        });\n      }).catch(e => {\n        console.log(\"error\", e);\n      });\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      width: '30%',\n      height: '30%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 68\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 11\n  }, this);\n}\n_s(App, \"es8G9xCZi7bRfBgyPzRbSy9Cpc8=\");\n_c = App;\nexport default PieChart;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Pie","Chart","ChartJs","Tooltip","Title","ArcElement","Legend","Doughnut","register","data","datasets","backgroundColor","labels","App","setData","useEffect","fetchData","fetch","then","res","json","console","log","label","i","push","name","id","catch","e","width","height","PieChart"],"sources":["C:/Users/juhipawa/Downloads/Charts-main/Charts-main/src/components/PieChart.js"],"sourcesContent":["/*import React, { useState } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Chart, registerables,ArcElement } from \"chart.js\";\r\nChart.register(...registerables);\r\nChart.register(ArcElement);\r\n\r\nconst PieChart = () => {\r\n  const [data, setData] = useState({\r\n    labels: [\"State 1\", \"State 2\", \"State 3\", \"State 4\", \"State 5\", \"State 6\" , \"State 7\", \"State 8\", \"State 9\", \"State 10\"],\r\n    datasets: [\r\n      {\r\n        data: [5, 8, 4, 4, 8, 11, 2, 7, 5, 6],\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132)\",\r\n          \"rgba(54, 162, 235)\",\r\n          \"rgba(255, 206, 86)\",\r\n          \"rgba(75, 192, 192)\",\r\n          \"rgba(153, 102, 255)\",\r\n          \"rgba(60, 179, 113)\",\r\n          \"rgba(210, 210, 210)\",\r\n          \"rgba(106, 90, 205)\",\r\n          \"rgba(255, 99, 71)\",\r\n          \"rgba(255, 165, 0)\",\r\n\r\n        ],\r\n        hoverBackgroundColor: [\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n        ],\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <div className=\"PieChart\" style={{ height: '30%' , width:'30%'}}>\r\n      <Pie data={data} options={{ maintainAspectRatio: true }} />\r\n    </div>\r\n  );\r\n};*/\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport {Chart as ChartJs, Tooltip, Title, ArcElement, Legend} from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nChartJs.register(\r\n  Tooltip, Title, ArcElement, Legend\r\n);\r\nconst data = {\r\n    datasets: [{\r\n        data: [10, 20, 30],\r\n        backgroundColor:[\r\n          'red',\r\n          'blue',\r\n          'yellow'\r\n        ]\r\n    },\r\n  ],\r\n  // These labels appear in the legend and in the tooltips when hovering different arcs\r\n  labels: [\r\n    \"State 1\", \r\n    \"State 2\", \r\n    \"State 3\",\r\n    \"State 4\", \r\n    \"State 5\",\r\n    \"State 6\",\r\n    \"State 7\",\r\n    \"State 8\", \r\n    \"State 9\",\r\n    \"State 10\"\r\n  ], \r\n};\r\nfunction App() {\r\n  const [data, setData] = useState({\r\n    datasets: [{\r\n        data: [10, 20, 30],\r\n        backgroundColor:[\r\n          'red',\r\n          'blue',\r\n          'yellow'\r\n        ]\r\n    },\r\n  ],\r\n  labels: [\r\n      'Red',\r\n      'Yellow',\r\n      'Blue'\r\n  ], \r\n});\r\n  useEffect(()=> {\r\n    const fetchData = () =>  {\r\n      fetch('https://jsonplaceholder.typicode.com/users').then((data) => {\r\n        const res = data.json();\r\n        return res\r\n      }).then((res) => {\r\n        console.log(\"resss\", res)\r\n        const label = [];\r\n        const data = [];\r\n        for(var i of res) {\r\n            label.push(i.name);\r\n            data.push(i.id)\r\n        }\r\n        setData(\r\n          {\r\n            datasets: [{\r\n                data:data,\r\n                backgroundColor:[\r\n                  'red',\r\n                  'blue',\r\n                  'yellow'\r\n                ]\r\n            },\r\n          ],\r\n          labels:label, \r\n        }\r\n        )\r\n      }).catch(e => {\r\n        console.log(\"error\", e)\r\n      }) \r\n    }\r\n  fetchData();\r\n  }, [])\r\n  return (<div className=\"App\" style={{width:'30%', height:'30%'}}><Doughnut data={data}/></div>\r\n  );\r\n}\r\nexport default PieChart;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}