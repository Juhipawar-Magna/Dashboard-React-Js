{"ast":null,"code":"import React from \"react\";\nimport \"./Dropdown.css\";\nconst options = [{\n  value: \"feature1\",\n  label: \"feature1\"\n}, {\n  value: \"feature2\",\n  label: \"feature2\"\n}, {\n  value: \"feature3\",\n  label: \"feature3\"\n}, {\n  value: \"feature4\",\n  label: \"feature4\"\n}, {\n  value: \"feature5\",\n  label: \"feature5\"\n}, {\n  value: \"feature6\",\n  label: \"feature6\"\n}];\nexport default options;\n\n/*class SelectBox extends React.Component {\r\n  state = {\r\n    items: this.props.items || [],\r\n    showItems: false,\r\n    selectedItem: this.props.items && this.props.items[0]\r\n  };\r\n\r\n  dropDown = () => {\r\n    this.setState(prevState => ({\r\n      showItems: !prevState.showItems\r\n    }));\r\n  };\r\n\r\n  selectItem = item => {\r\n    this.setState({\r\n      selectedItem: item,\r\n      showItems: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"select-box--box\">\r\n        <div className=\"select-box--container\">\r\n          <div className=\"select-box--selected-item\">\r\n            {this.state.selectedItem.value}\r\n          </div>\r\n          <div className=\"select-box--arrow\" onClick={this.dropDown}>\r\n            <span\r\n              className={`${\r\n                this.state.showItems\r\n                  ? \"select-box--arrow-up\"\r\n                  : \"select-box--arrow-down\"\r\n              }`}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            style={{ display: this.state.showItems ? \"block\" : \"none\" }}\r\n            className={\"select-box--items\"}\r\n          >\r\n            {this.state.items.map(item => (\r\n              <div\r\n                key={item.id}\r\n                onClick={() => this.selectItem(item)}\r\n                className={this.state.selectedItem === item ? \"selected\" : \"\"}\r\n              >\r\n                {item.value}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default SelectBox;\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useEffect , useState } from \"react\";\r\n\r\nimport \"./Dropdown.css\";\r\n\r\nconst Icon = () => {\r\n  return (\r\n    <svg height=\"20\" width=\"20\" viewBox=\"0 0 20 20\">\r\n      <path d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\"></path>\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst Dropdown = ({ placeHolder, options, isMulti }) => {\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [selectedValue, setSelectedValue] = useState(isMulti ? [] : null);\r\n\r\n    useEffect( () => {\r\n        const handleInputClick =(e) => {};\r\n\r\n        const getDisplay = () => {\r\n            if (!selectedValue || selectedValue.length === 0) {\r\n                return placeHolder;\r\n            }\r\n            if (isMulti) {\r\n                return (\r\n                    <div className=\"dropdown-tags\">\r\n                        {selectedValue.map((option) => (\r\n                            <div key={option.value} className=\"dropdown-tag-item\">\r\n                                {option.label}\r\n                                <span onClick={(e) => onTagRemove(e, option)} className=\"dropdown-tag-close\"><CloseIcon/></span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                );\r\n            }\r\n            return selectedValue.label;\r\n        };\r\n        const removeOption = (option) => {\r\n            return selectedValue.filter((o) => o.value !== option.value);\r\n        };\r\n        const onTagRemove = (e, option) => {\r\n            e.stopPropagation();\r\n            setSelectedValue(removeOption(option));\r\n        };\r\n\r\n        const onItemClick = (option) => {\r\n            let newValue;\r\n            if (isMulti) {\r\n                if (selectedValue.findIndex((o) => o.value === option.value) >= 0) {\r\n                    newValue = removeOption(option);\r\n                } else {\r\n                    newValue = [...selectedValue, option];\r\n                }\r\n            } else {\r\n                newValue = option;\r\n            }\r\n            setSelectedValue(newValue);\r\n        };\r\n\r\n        const isSelected = (option) => {\r\n            if (isMulti) {\r\n                return selectedValue.filter((o) => o.value === option.value).length > 0;\r\n            }\r\n            if (!selectedValue) {\r\n                return false;\r\n            }\r\n            return selectedValue.value === option.value;\r\n        };\r\n    }\r\n\r\n    )\r\n\r\n  return (\r\n    <div className=\"dropdown-container\">\r\n      <div className=\"dropdown-input\">\r\n        <div className=\"dropdown-selected-value\">{getDisplay()}</div>\r\n        <div className=\"dropdown-tools\">\r\n          <div className=\"dropdown-tool\">\r\n            <Icon />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React from \"react\";\r\n\r\nconst App  = () => {\r\n    const [isOpen, setOpen]= React.useState(false);\r\n\r\n    const handleOpen = () =>{\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () =>{\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={handleOpen}>Open</Button>\r\n            <Button onClick={handleClose}>Close</Button>\r\n\r\n            {isOpen && <div>submit</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Button = ({onClick, children }) => {\r\n    return (\r\n        <button type=\"button\" onClick={onClick}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;*/","map":{"version":3,"names":["React","options","value","label"],"sources":["C:/Users/juhipawa/Downloads/Charts-main/Charts-main/src/components/Dropdown.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./Dropdown.css\";\r\n\r\nconst options = [\r\n  { value: \"feature1\", label: \"feature1\" },\r\n  { value: \"feature2\", label: \"feature2\" },\r\n  { value: \"feature3\", label: \"feature3\" },\r\n  { value: \"feature4\", label: \"feature4\" },\r\n  { value: \"feature5\", label: \"feature5\" },\r\n  { value: \"feature6\", label: \"feature6\" }\r\n];\r\n\r\nexport default options;\r\n\r\n/*class SelectBox extends React.Component {\r\n  state = {\r\n    items: this.props.items || [],\r\n    showItems: false,\r\n    selectedItem: this.props.items && this.props.items[0]\r\n  };\r\n\r\n  dropDown = () => {\r\n    this.setState(prevState => ({\r\n      showItems: !prevState.showItems\r\n    }));\r\n  };\r\n\r\n  selectItem = item => {\r\n    this.setState({\r\n      selectedItem: item,\r\n      showItems: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"select-box--box\">\r\n        <div className=\"select-box--container\">\r\n          <div className=\"select-box--selected-item\">\r\n            {this.state.selectedItem.value}\r\n          </div>\r\n          <div className=\"select-box--arrow\" onClick={this.dropDown}>\r\n            <span\r\n              className={`${\r\n                this.state.showItems\r\n                  ? \"select-box--arrow-up\"\r\n                  : \"select-box--arrow-down\"\r\n              }`}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            style={{ display: this.state.showItems ? \"block\" : \"none\" }}\r\n            className={\"select-box--items\"}\r\n          >\r\n            {this.state.items.map(item => (\r\n              <div\r\n                key={item.id}\r\n                onClick={() => this.selectItem(item)}\r\n                className={this.state.selectedItem === item ? \"selected\" : \"\"}\r\n              >\r\n                {item.value}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default SelectBox;\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useEffect , useState } from \"react\";\r\n\r\nimport \"./Dropdown.css\";\r\n\r\nconst Icon = () => {\r\n  return (\r\n    <svg height=\"20\" width=\"20\" viewBox=\"0 0 20 20\">\r\n      <path d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\"></path>\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst Dropdown = ({ placeHolder, options, isMulti }) => {\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [selectedValue, setSelectedValue] = useState(isMulti ? [] : null);\r\n\r\n    useEffect( () => {\r\n        const handleInputClick =(e) => {};\r\n\r\n        const getDisplay = () => {\r\n            if (!selectedValue || selectedValue.length === 0) {\r\n                return placeHolder;\r\n            }\r\n            if (isMulti) {\r\n                return (\r\n                    <div className=\"dropdown-tags\">\r\n                        {selectedValue.map((option) => (\r\n                            <div key={option.value} className=\"dropdown-tag-item\">\r\n                                {option.label}\r\n                                <span onClick={(e) => onTagRemove(e, option)} className=\"dropdown-tag-close\"><CloseIcon/></span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                );\r\n            }\r\n            return selectedValue.label;\r\n        };\r\n        const removeOption = (option) => {\r\n            return selectedValue.filter((o) => o.value !== option.value);\r\n        };\r\n        const onTagRemove = (e, option) => {\r\n            e.stopPropagation();\r\n            setSelectedValue(removeOption(option));\r\n        };\r\n\r\n        const onItemClick = (option) => {\r\n            let newValue;\r\n            if (isMulti) {\r\n                if (selectedValue.findIndex((o) => o.value === option.value) >= 0) {\r\n                    newValue = removeOption(option);\r\n                } else {\r\n                    newValue = [...selectedValue, option];\r\n                }\r\n            } else {\r\n                newValue = option;\r\n            }\r\n            setSelectedValue(newValue);\r\n        };\r\n\r\n        const isSelected = (option) => {\r\n            if (isMulti) {\r\n                return selectedValue.filter((o) => o.value === option.value).length > 0;\r\n            }\r\n            if (!selectedValue) {\r\n                return false;\r\n            }\r\n            return selectedValue.value === option.value;\r\n        };\r\n    }\r\n\r\n    )\r\n\r\n  return (\r\n    <div className=\"dropdown-container\">\r\n      <div className=\"dropdown-input\">\r\n        <div className=\"dropdown-selected-value\">{getDisplay()}</div>\r\n        <div className=\"dropdown-tools\">\r\n          <div className=\"dropdown-tool\">\r\n            <Icon />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React from \"react\";\r\n\r\nconst App  = () => {\r\n    const [isOpen, setOpen]= React.useState(false);\r\n\r\n    const handleOpen = () =>{\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () =>{\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={handleOpen}>Open</Button>\r\n            <Button onClick={handleClose}>Close</Button>\r\n\r\n            {isOpen && <div>submit</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Button = ({onClick, children }) => {\r\n    return (\r\n        <button type=\"button\" onClick={onClick}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;*/"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAEvB,MAAMC,OAAO,GAAG,CACd;EAAEC,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAW,CAAC,EACxC;EAAED,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAW,CAAC,EACxC;EAAED,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAW,CAAC,EACxC;EAAED,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAW,CAAC,EACxC;EAAED,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAW,CAAC,EACxC;EAAED,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAW,CAAC,CACzC;AAED,eAAeF,OAAO;;AAEt},"metadata":{},"sourceType":"module","externalDependencies":[]}