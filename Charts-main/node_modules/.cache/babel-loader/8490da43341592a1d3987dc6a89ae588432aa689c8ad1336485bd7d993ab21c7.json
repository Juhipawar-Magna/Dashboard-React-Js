{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juhipawa\\\\Downloads\\\\Charts-main\\\\Charts-main\\\\src\\\\components\\\\StackedBarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { chart as ChartJS, categoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StackedBarChart = () => {\n  _s();\n  const [data, setData] = useState({\n    labels: [\"User 1\", \"User 2\", \"User 3\", \"User 4\", \"User 5\", \"User 6\", \"User 7\", \"User 8\"],\n    datasets: [{\n      label: \"State 1\",\n      backgroundColor: \"#FF6384\",\n      data: [4, 5, 4, 3, 2]\n    }, {\n      label: \"State 2\",\n      backgroundColor: \"#36A2EB\",\n      data: [2, 3, 2, 5, 6, 7, 5]\n    }, {\n      label: \"State 3\",\n      backgroundColor: \"#f3ba2f\",\n      data: [3, 2, 3, 7, 2, 5, 1, 4, 3, 4]\n    }, {\n      label: \"State 4\",\n      backgroundColor: \"#2a71d0\",\n      data: [1]\n    }, {\n      label: \"State 5\",\n      backgroundColor: \"#ee82ee\",\n      data: [1]\n    }, {\n      label: \"State 6\",\n      backgroundColor: \"#3cb371\",\n      data: [1, 4, 5, 7, 1, 4, 5, 7, 3, 9]\n    }, {\n      label: \"State 7\",\n      backgroundColor: \"#6a5acd\",\n      data: [7, 2, 7, 2, 1, 5, 4, 8, 3, 6]\n    }, {\n      label: \"State 8\",\n      backgroundColor: \"#ffa500\",\n      data: [3, 6, 4, 1, 1, 6, 4, 2, 8, 3]\n    }, {\n      label: \"State 9\",\n      backgroundColor: \"#616161\",\n      data: [1, 7, 5, 4, 1, 5, 7, 2, 4, 6]\n    }, {\n      label: \"State 10\",\n      backgroundColor: \"#b4b4b4\",\n      data: [6, 8, 4, 2, 9, 7, 3, 4, 1, 7]\n    }]\n  });\n  const options = {\n    scales: {\n      xAxes: [{\n        stacked: true\n      }],\n      yAxes: [{\n        ticks: {\n          beginATZero: true\n        },\n        stacked: true\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(StackedBar, {\n      data: data,\n      height: 0,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(StackedBarChart, \"UXDMJIaf5ut252byTpYLQIivEyE=\");\n_c = StackedBarChart;\nexport default StackedBarChart;\n\n/*import React from \"react\";\r\nimport Chart from \"react-chartjs-2\";\r\nfunction Stackedbarchart()\r\n{\r\n    return(<div className=\"Charts\"><h2>Stacked bar chart in react react-chartjs-2</h2>\r\n                <type = \"bar\"\r\n                width={1349}\r\n                height={560}\r\n                series={[\r\n                    {\r\n                        name:\"state 1\",\r\n                        data:[4, 5, 4, 3,2],\r\n                        //color: '#f90000'\r\n                    },\r\n                    {\r\n                        name:\"state 2\",\r\n                        data:[2, 3, 2, 5,6],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 3\",\r\n                        data:[3, 2, 3, 7,2],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 4\",\r\n                        data:[1, 4, 5, 4,6],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 5\",\r\n                        data:[3, 6, 3, 2,4],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 6\",\r\n                        data:[6, 2, 5, 8,1],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 7\",\r\n                        data:[2, 6, 7, 2,1],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 8\",\r\n                        data:[4, 5, 7, 4,5],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 9\",\r\n                        data:[1, 6, 6, 2,4],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 10\",\r\n                        data:[2, 5, 2, 3,1],\r\n                       // color: '#000000'\r\n                    }\r\n                ]}\r\n                options={{\r\n                    title:{\r\n                        text:\"work status\"\r\n                    },\r\n                    chart:{\r\n                        stacked:true,\r\n                    },\r\n                    plotOptions:{\r\n                        bar:{\r\n                            horizontal:true,\r\n                            columnWidth:'100%'\r\n                          }\r\n                    },\r\n                    stroke: {\r\n                        width: 1,\r\n                    },\r\n                    xaxis:{\r\n                        title:{\r\n                            text:\"work status\"\r\n                        },\r\n                        categories:[\"User 1\", \"User 2\", \"User 3\", \"User 4\",\"User 5\",\"User 6\",\"User 7\",\"User 8\"]\r\n                    },\r\n                    yaxis:{\r\n                        title:{\r\n                            text:\"Data in state level\"\r\n                        },\r\n                    },\r\n                    legend:{\r\n                        position: 'bottom'\r\n                    },\r\n                    dataLabels:{\r\n                        enabled:true,\r\n                    },\r\n                    grid: {\r\n                        show:true,\r\n                        xaxis:{\r\n                            lines:{\r\n                                show:false\r\n                            }\r\n                        },\r\n                        yaxis:{\r\n                            lines:{\r\n                                show:false\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n                />\r\n    );\r\n}\r\nexport default Stackedbarchart;*/\nvar _c;\n$RefreshReg$(_c, \"StackedBarChart\");","map":{"version":3,"names":["React","useState","chart","ChartJS","categoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","StackedBarChart","data","setData","labels","datasets","label","backgroundColor","options","scales","xAxes","stacked","yAxes","ticks","beginATZero"],"sources":["C:/Users/juhipawa/Downloads/Charts-main/Charts-main/src/components/StackedBarChart.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  chart as ChartJS,\r\n  categoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js'\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst StackedBarChart = () => {\r\n  const [data, setData] = useState({\r\n    labels: [\"User 1\", \"User 2\", \"User 3\", \"User 4\",\"User 5\",\"User 6\",\"User 7\",\"User 8\"],\r\n    datasets: [ \r\n      \r\n      {\r\n        label: \"State 1\", \r\n        backgroundColor: \"#FF6384\",\r\n        data: [4, 5, 4, 3, 2],\r\n      },\r\n      {\r\n        label: \"State 2\",\r\n        backgroundColor: \"#36A2EB\",\r\n        data: [2, 3, 2, 5, 6, 7, 5],\r\n      },\r\n      {\r\n        label: \"State 3\",\r\n        backgroundColor: \"#f3ba2f\",\r\n        data: [3, 2, 3, 7, 2, 5, 1, 4, 3, 4],\r\n      },\r\n      {\r\n        label: \"State 4\",\r\n        backgroundColor: \"#2a71d0\",\r\n        data: [1],\r\n      },\r\n      {\r\n        label: \"State 5\",\r\n        backgroundColor: \"#ee82ee\",\r\n        data: [1],\r\n      },\r\n      {\r\n        label: \"State 6\",\r\n        backgroundColor: \"#3cb371\",\r\n        data: [1, 4, 5, 7, 1, 4, 5, 7, 3, 9],\r\n      },\r\n      {\r\n        label: \"State 7\",\r\n        backgroundColor: \"#6a5acd\",\r\n        data: [7, 2, 7, 2, 1, 5, 4, 8, 3, 6],\r\n      },\r\n      {\r\n        label: \"State 8\",\r\n        backgroundColor: \"#ffa500\",\r\n        data: [3, 6, 4, 1, 1, 6, 4, 2, 8, 3],\r\n      },\r\n      {\r\n        label: \"State 9\",\r\n        backgroundColor: \"#616161\",\r\n        data: [1, 7, 5, 4, 1, 5, 7, 2, 4, 6],\r\n      },\r\n      {        \r\n        label: \"State 10\",\r\n        backgroundColor: \"#b4b4b4\",\r\n        data: [ 6, 8, 4, 2, 9, 7, 3, 4, 1, 7],\r\n\r\n      },      \r\n    ],\r\n  });\r\n\r\n  const options = {\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          stacked: true,\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {beginATZero: true },\r\n          stacked: true,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <StackedBar data={data}  height={0} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StackedBarChart;\r\n\r\n\r\n\r\n\r\n/*import React from \"react\";\r\nimport Chart from \"react-chartjs-2\";\r\nfunction Stackedbarchart()\r\n{\r\n    return(<div className=\"Charts\"><h2>Stacked bar chart in react react-chartjs-2</h2>\r\n                <type = \"bar\"\r\n                width={1349}\r\n                height={560}\r\n                series={[\r\n                    {\r\n                        name:\"state 1\",\r\n                        data:[4, 5, 4, 3,2],\r\n                        //color: '#f90000'\r\n                    },\r\n                    {\r\n                        name:\"state 2\",\r\n                        data:[2, 3, 2, 5,6],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 3\",\r\n                        data:[3, 2, 3, 7,2],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 4\",\r\n                        data:[1, 4, 5, 4,6],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 5\",\r\n                        data:[3, 6, 3, 2,4],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 6\",\r\n                        data:[6, 2, 5, 8,1],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 7\",\r\n                        data:[2, 6, 7, 2,1],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 8\",\r\n                        data:[4, 5, 7, 4,5],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 9\",\r\n                        data:[1, 6, 6, 2,4],\r\n                       // color: '#000000'\r\n                    },\r\n                    {\r\n                        name:\"state 10\",\r\n                        data:[2, 5, 2, 3,1],\r\n                       // color: '#000000'\r\n                    }\r\n                ]}\r\n                options={{\r\n                    title:{\r\n                        text:\"work status\"\r\n                    },\r\n                    chart:{\r\n                        stacked:true,\r\n                    },\r\n                    plotOptions:{\r\n                        bar:{\r\n                            horizontal:true,\r\n                            columnWidth:'100%'\r\n                          }\r\n                    },\r\n                    stroke: {\r\n                        width: 1,\r\n                    },\r\n                    xaxis:{\r\n                        title:{\r\n                            text:\"work status\"\r\n                        },\r\n                        categories:[\"User 1\", \"User 2\", \"User 3\", \"User 4\",\"User 5\",\"User 6\",\"User 7\",\"User 8\"]\r\n                    },\r\n                    yaxis:{\r\n                        title:{\r\n                            text:\"Data in state level\"\r\n                        },\r\n                    },\r\n                    legend:{\r\n                        position: 'bottom'\r\n                    },\r\n                    dataLabels:{\r\n                        enabled:true,\r\n                    },\r\n                    grid: {\r\n                        show:true,\r\n                        xaxis:{\r\n                            lines:{\r\n                                show:false\r\n                            }\r\n                        },\r\n                        yaxis:{\r\n                            lines:{\r\n                                show:false\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n                />\r\n    );\r\n}\r\nexport default Stackedbarchart;*/\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}