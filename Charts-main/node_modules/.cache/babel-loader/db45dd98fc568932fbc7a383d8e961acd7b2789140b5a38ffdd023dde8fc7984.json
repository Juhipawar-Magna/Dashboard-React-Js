{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juhipawa\\\\Documents\\\\Charts-main\\\\src\\\\components\\\\PieChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ReactApexChart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PieChart = () => {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:8000/api/Items/');\n        const data = response.data;\n\n        // Extract the state counts from the API response\n        const stateCounts = data.reduce((acc, item) => {\n          const state = item.feature_state;\n          if (acc[state]) {\n            acc[state] += 1;\n          } else {\n            acc[state] = 1;\n          }\n          return acc;\n        }, {});\n\n        // Convert state counts to chart data format\n        const chartData = Object.keys(stateCounts).map(state => ({\n          x: state,\n          y: stateCounts[state]\n        }));\n        setChartData(chartData);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n  const options = {\n    title: {\n      text: \"Items PieChart\"\n    },\n    chart: {\n      type: 'pie'\n    },\n    labels: chartData.map(data => data.x)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Work Status mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pie Chart - State Counts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: options,\n      series: chartData.map(data => data.y),\n      type: \"pie\",\n      width: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(PieChart, \"Leo9Xk/Ki5G6SkYc3yZESo07mWw=\");\n_c = PieChart;\nexport default PieChart;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import ReactApexChart from 'react-apexcharts';\n\n// const PieChart = () => {\n//   const [chartData, setChartData] = useState([]);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await axios.get('http://127.0.0.1:8000/api/Items/');\n//         const data = response.data;\n\n//         // Extract the required values from the API response and assign them to variables\n//         const item_number = data.item_number;\n//         const feature_name = data.feature_name;\n//         const feature_state = data.feature_state;\n//         const assigned_user = data.assigned_user;\n//         const total_test_excuted = data.total_test_excuted;\n//         const test_passed = data.test_passed;\n//         const test_failed = data.test_failed;\n\n//         // Use these variables in your chartData\n//         const chartData = [\n//           { x: 'Item Number', y: item_number },\n//           { x: 'Feature Name', y: feature_name },\n//           { x: 'Feature State', y: feature_state },\n//           { x: 'Assigned User', y: assigned_user },\n//           { x: 'Total Tests Executed', y: total_test_excuted },\n//           { x: 'Tests Passed', y: test_passed },\n//           { x: 'Tests Failed', y: test_failed },\n//         ];\n\n//         setChartData(chartData);\n//       } catch (error) {\n//         console.log(error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   const options = {\n//     chart: {\n//       type: 'pie',\n//     },\n//     labels: chartData.map((data) => data.x),\n//   };\n\n//   return (\n//     <div>\n//       <ReactApexChart\n//         options={options}\n//         series={chartData.map((data) => data.y)}\n//         type=\"pie\"\n//         width={500}\n//       />\n//     </div>\n//   );\n// };\n\n// export default PieChart;\n\n// import React ,{ useState, useEffect} from \"react\";\n// import  Chart  from \"react-apexcharts\";\n// import API from \"./API\";\n// function Piechart()\n// {\n//   const [itemId, setItemId] = useState(\"\");\n//   const [item_number, setItem_number] = useState(\"\");\n//   const [feature_name, setFeature_name] = useState(\"\");\n//   const [feature_state, setfeature_state] = useState(\"\");\n//   const [assigned_user, setAssigned_user] = useState(\"\");\n//   const [total_test_excuted, setTotal_test_executed] = useState(\"\");\n//   const [test_passed, setTest_passed] = useState(\"\");\n//   const [test_failed, setTest_failed] = useState(\"\");\n//    useEffect( ()=>{\n\n//        const sitem_number=[];\n//        const sfeature_name=[];\n//        const sfeature_state=[];\n//        const sassigned_user=[];\n//        const stotal_test_excuted=[];\n//        const stest_passed=[];\n//        const stest_failed=[];\n\n//        const getItemsdata= async()=>{\n//        const reqData= await fetch(\"http://127.0.0.1:8000/api/Items/\");\n//        const resData= await reqData.json();\n//       //  console.log(\"resData\")\n\n//        for(let i=0; i < resData.length; i++)\n//        {\n//         sitem_number.push(resData[i].item_number);\n//         sfeature_name.push(resData[i].feature_name);\n//         sfeature_state.push(resData[i].feature_state);\n//         sassigned_user.push(resData[i].assigned_user);\n//         stotal_test_excuted.push(resData[i].total_test_excuted);\n//         stest_passed.push(resData[i].test_passed);\n//         stest_failed.push(resData[i].test_failed);\n\n//        }\n//        setItem_number(sitem_number);\n//        setFeature_name(sfeature_name);\n//        setfeature_state( sfeature_state);\n//        setAssigned_user(sassigned_user);\n//        setTotal_test_executed(stotal_test_excuted);\n//        setTest_passed(stest_passed);\n//        setTest_failed(stest_failed);\n//         console.log(item_number); \n//        }\n//     getItemsdata();\n//    },[]);\n//    console.log(item_number)\n//     return(\n//     <React.Fragment>\n//       <div className=\"Work Status mb-3\">\n//         <h3 className=\"mt-3\">Welcome to Piechart</h3>\n//         <Chart \n//                 type=\"pie\"\n//                 width={1349}\n//                 height={550}\n//                 series={[5,10,8,13,4,82,72]}\n\n//                 options={{\n//                         title:{ text:\"Items PieChart\"\n//                         }, \n//                        noData:{text:\" Empty Data\"},                        \n//                       // colors:[\"#f90000\",\"#f0f\"],\n//                       labels:[\"State 1\", \"State 2\", \"State 3\", \"State 4\", \"State 5\", \"State 6\" , \"State 7\", \"State 8\", \"State 9\", \"State 10\"]                  \n//                  }}>\n//                   </Chart>\n//                   </div>\n//                   </React.Fragment>\n//     );\n// }\n// export default Piechart;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import Chart from 'react-apexcharts';\n\n// const PieChart = () => {\n//   const [chartData, setChartData] = useState({\n//     options: {\n//       labels: [],\n//     },\n//     series: [],\n//   });\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   const fetchData = async () => {\n//     try {\n//       const response = await axios.get('http://127.0.0.1:8000/api/Items/'); // Replace 'your-api-url' with your actual API endpoint\n//       const data = response.data;\n\n//       const labels = data.map((item) => item.label);\n//       const series = data.map((item) => item.value);\n\n//       setChartData({\n//         options: {\n//           labels: [ item_number, feature_name, feature_state, assigned_user, total_test_excuted, test_passed ,test_failed],\n//         },\n//         series: series,\n//       });\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Chart\n//         options={chartData.options}\n//         series={chartData.series}\n//         type=\"pie\"\n//         width=\"400\"\n//       />\n//     </div>\n//   );\n// };\n\n// export default PieChart;\n\n// import React ,{ useState, useEffect} from \"react\";\n// import  Chart  from \"react-apexcharts\";\n// function Piechart()\n//  {\n//    const [featureName, setFeaturename]= useState([]);\n//    const [stateLevels, setStatelevels]= useState([]);\n//    useEffect( ()=>{\n\n//        const sName=[];\n//        const sLevel=[];\n//        const getItemsdata= async()=>{\n//        const reqData= await fetch(\"http://127.0.0.1:8000/api/Items/\");\n//        const resData= await reqData.json();       \n//        for(let i=0; i < resData.length; i++)\n//        {\n//         sName.push(resData[i].featureName);\n//         sLevel.push(parseInt(resData[i].stateLevel));\n//        }\n//        setFeaturename(sName);\n//        setStatelevels(sLevel);\n//         //console.log(resData); \n//        }\n//     getItemsdata();\n//    },[]);\n//     return(<React.Fragment><div className=\"Work Status mb-3\"><h3 className=\"mt-3\">Welcome to Piechart </h3><Chart \n//                 type=\"pie\"\n//                 width={1349}\n//                 height={550}\n//                 series={[5,8,2,4,9,2,7,6,2,4] }                \n//                 options={{\n//                         title:{ text:\"Items PieChart\"\n//                         }, \n//                        noData:{text:\" Empty Data\"},                        \n//                       // colors:[\"#f90000\",\"#f0f\"],\n//                       labels:[\"State 1\", \"State 2\", \"State 3\", \"State 4\", \"State 5\", \"State 6\" , \"State 7\", \"State 8\", \"State 9\", \"State 10\"]                  \n//                  }}></Chart></div></React.Fragment>\n//     );\n//  }\n// export default Piechart;\n\n/*import React, { useState } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Chart, registerables,ArcElement } from \"chart.js\";\r\nChart.register(...registerables);\r\nChart.register(ArcElement);\r\n\r\nconst MonochromePieChart = () => {\r\n  const [data, setData] = useState({\r\n    labels: [\"State 1\", \"State 2\", \"State 3\", \"State 4\", \"State 5\", \"State 6\" , \"State 7\", \"State 8\", \"State 9\", \"State 10\"],\r\n    datasets: [\r\n      {\r\n        data: [5, 8, 4, 4, 8, 11, 2, 7, 5, 6],\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132)\",\r\n          \"rgba(54, 162, 235)\",\r\n          \"rgba(255, 206, 86)\",\r\n          \"rgba(75, 192, 192)\",\r\n          \"rgba(153, 102, 255)\",\r\n          \"rgba(60, 179, 113)\",\r\n          \"rgba(210, 210, 210)\",\r\n          \"rgba(106, 90, 205)\",\r\n          \"rgba(255, 99, 71)\",\r\n          \"rgba(255, 165, 0)\",\r\n\r\n        ],\r\n        hoverBackgroundColor: [\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n        ],\r\n        borderwidth: 1\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <div className=\"PieChart\" style={{ height: '40%' , width:'30%'}}>\r\n      <Pie data={data} options={{ maintainAspectRatio: true }} />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/*import { useEffect, useState } from 'react';\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport {Chart as ChartJs, Tooltip, Title, ArcElement, Legend} from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nChartJs.register(\r\n  Tooltip, Title, ArcElement, Legend\r\n);\r\nconst data = {\r\n    datasets: [{\r\n        data: [10, 20, 30],\r\n        backgroundColor:[\r\n          'red',\r\n          'blue',\r\n          'yellow'\r\n        ]\r\n    },\r\n  ],\r\n  // These labels appear in the legend and in the tooltips when hovering different arcs\r\n  labels: [\r\n    \"State 1\", \r\n    \"State 2\", \r\n    \"State 3\",\r\n    \"State 4\", \r\n    \"State 5\",\r\n    \"State 6\",\r\n    \"State 7\",\r\n    \"State 8\", \r\n    \"State 9\",\r\n    \"State 10\"\r\n  ], \r\n};\r\nfunction App() {\r\n  const [data, setData] = useState({\r\n    datasets: [{\r\n        data: [10, 20, 30],\r\n        backgroundColor:[\r\n          'red',\r\n          'blue',\r\n          'yellow'\r\n        ]\r\n    },\r\n  ],\r\n  labels: [\r\n      'Red',\r\n      'Yellow',\r\n      'Blue'\r\n  ], \r\n});\r\n  useEffect(()=> {\r\n    const fetchData = () =>  {\r\n      fetch('https://jsonplaceholder.typicode.com/users').then((data) => {\r\n        const res = data.json();\r\n        return res\r\n      }).then((res) => {\r\n        console.log(\"resss\", res)\r\n        const label = [];\r\n        const data = [];\r\n        for(var i of res) {\r\n            label.push(i.name);\r\n            data.push(i.id)\r\n        }\r\n        setData(\r\n          {\r\n            datasets: [{\r\n                data:data,\r\n                backgroundColor:[\r\n                  'red',\r\n                  'blue',\r\n                  'yellow'\r\n                ]\r\n            },\r\n          ],\r\n          labels:label, \r\n        }\r\n        )\r\n      }).catch(e => {\r\n        console.log(\"error\", e)\r\n      }) \r\n    }\r\n  fetchData();\r\n  }, [])\r\n  return (<div className=\"Pie\" style={{width:'30%', height:'30%'}}><PieChart data={data}/></div>\r\n  );\r\n}\r\nexport default MonochromePieChart;*/\nvar _c;\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["React","useEffect","useState","axios","ReactApexChart","PieChart","chartData","setChartData","fetchData","response","get","data","stateCounts","reduce","acc","item","state","feature_state","Object","keys","map","x","y","error","console","log","options","title","text","chart","type","labels"],"sources":["C:/Users/juhipawa/Documents/Charts-main/src/components/PieChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\nconst PieChart = () => {\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:8000/api/Items/');\r\n        const data = response.data;\r\n\r\n        // Extract the state counts from the API response\r\n        const stateCounts = data.reduce((acc, item) => {\r\n          const state = item.feature_state;\r\n          if (acc[state]) {\r\n            acc[state] += 1;\r\n          } else {\r\n            acc[state] = 1;\r\n          }\r\n          return acc;\r\n        }, {});\r\n\r\n        // Convert state counts to chart data format\r\n        const chartData = Object.keys(stateCounts).map((state) => ({\r\n          x: state,\r\n          y: stateCounts[state],\r\n        }));\r\n\r\n        setChartData(chartData);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const options = {\r\n    title:{ \r\n      text:\"Items PieChart\"\r\n    },\r\n    chart: {\r\n      type: 'pie',\r\n    },\r\n    labels: chartData.map((data) => data.x),\r\n  };\r\n\r\n  return (\r\n    <div className=\"Work Status mb-3\">\r\n    <h2>Pie Chart - State Counts</h2>\r\n      <ReactApexChart\r\n        options={options}\r\n        series={chartData.map((data) => data.y)}\r\n        type=\"pie\"\r\n        width={500}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import ReactApexChart from 'react-apexcharts';\r\n\r\n// const PieChart = () => {\r\n//   const [chartData, setChartData] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://127.0.0.1:8000/api/Items/');\r\n//         const data = response.data;\r\n\r\n//         // Extract the required values from the API response and assign them to variables\r\n//         const item_number = data.item_number;\r\n//         const feature_name = data.feature_name;\r\n//         const feature_state = data.feature_state;\r\n//         const assigned_user = data.assigned_user;\r\n//         const total_test_excuted = data.total_test_excuted;\r\n//         const test_passed = data.test_passed;\r\n//         const test_failed = data.test_failed;\r\n\r\n//         // Use these variables in your chartData\r\n//         const chartData = [\r\n//           { x: 'Item Number', y: item_number },\r\n//           { x: 'Feature Name', y: feature_name },\r\n//           { x: 'Feature State', y: feature_state },\r\n//           { x: 'Assigned User', y: assigned_user },\r\n//           { x: 'Total Tests Executed', y: total_test_excuted },\r\n//           { x: 'Tests Passed', y: test_passed },\r\n//           { x: 'Tests Failed', y: test_failed },\r\n//         ];\r\n\r\n//         setChartData(chartData);\r\n//       } catch (error) {\r\n//         console.log(error);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const options = {\r\n//     chart: {\r\n//       type: 'pie',\r\n//     },\r\n//     labels: chartData.map((data) => data.x),\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <ReactApexChart\r\n//         options={options}\r\n//         series={chartData.map((data) => data.y)}\r\n//         type=\"pie\"\r\n//         width={500}\r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PieChart;\r\n\r\n\r\n\r\n// import React ,{ useState, useEffect} from \"react\";\r\n// import  Chart  from \"react-apexcharts\";\r\n// import API from \"./API\";\r\n// function Piechart()\r\n// {\r\n//   const [itemId, setItemId] = useState(\"\");\r\n//   const [item_number, setItem_number] = useState(\"\");\r\n//   const [feature_name, setFeature_name] = useState(\"\");\r\n//   const [feature_state, setfeature_state] = useState(\"\");\r\n//   const [assigned_user, setAssigned_user] = useState(\"\");\r\n//   const [total_test_excuted, setTotal_test_executed] = useState(\"\");\r\n//   const [test_passed, setTest_passed] = useState(\"\");\r\n//   const [test_failed, setTest_failed] = useState(\"\");\r\n//    useEffect( ()=>{\r\n  \r\n//        const sitem_number=[];\r\n//        const sfeature_name=[];\r\n//        const sfeature_state=[];\r\n//        const sassigned_user=[];\r\n//        const stotal_test_excuted=[];\r\n//        const stest_passed=[];\r\n//        const stest_failed=[];\r\n\r\n//        const getItemsdata= async()=>{\r\n//        const reqData= await fetch(\"http://127.0.0.1:8000/api/Items/\");\r\n//        const resData= await reqData.json();\r\n//       //  console.log(\"resData\")\r\n\r\n//        for(let i=0; i < resData.length; i++)\r\n//        {\r\n//         sitem_number.push(resData[i].item_number);\r\n//         sfeature_name.push(resData[i].feature_name);\r\n//         sfeature_state.push(resData[i].feature_state);\r\n//         sassigned_user.push(resData[i].assigned_user);\r\n//         stotal_test_excuted.push(resData[i].total_test_excuted);\r\n//         stest_passed.push(resData[i].test_passed);\r\n//         stest_failed.push(resData[i].test_failed);\r\n        \r\n//        }\r\n//        setItem_number(sitem_number);\r\n//        setFeature_name(sfeature_name);\r\n//        setfeature_state( sfeature_state);\r\n//        setAssigned_user(sassigned_user);\r\n//        setTotal_test_executed(stotal_test_excuted);\r\n//        setTest_passed(stest_passed);\r\n//        setTest_failed(stest_failed);\r\n//         console.log(item_number); \r\n//        }\r\n//     getItemsdata();\r\n//    },[]);\r\n//    console.log(item_number)\r\n//     return(\r\n//     <React.Fragment>\r\n//       <div className=\"Work Status mb-3\">\r\n//         <h3 className=\"mt-3\">Welcome to Piechart</h3>\r\n//         <Chart \r\n//                 type=\"pie\"\r\n//                 width={1349}\r\n//                 height={550}\r\n//                 series={[5,10,8,13,4,82,72]}\r\n                                \r\n//                 options={{\r\n//                         title:{ text:\"Items PieChart\"\r\n//                         }, \r\n//                        noData:{text:\" Empty Data\"},                        \r\n//                       // colors:[\"#f90000\",\"#f0f\"],\r\n//                       labels:[\"State 1\", \"State 2\", \"State 3\", \"State 4\", \"State 5\", \"State 6\" , \"State 7\", \"State 8\", \"State 9\", \"State 10\"]                  \r\n//                  }}>\r\n//                   </Chart>\r\n//                   </div>\r\n//                   </React.Fragment>\r\n//     );\r\n// }\r\n// export default Piechart;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import Chart from 'react-apexcharts';\r\n\r\n// const PieChart = () => {\r\n//   const [chartData, setChartData] = useState({\r\n//     options: {\r\n//       labels: [],\r\n//     },\r\n//     series: [],\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const fetchData = async () => {\r\n//     try {\r\n//       const response = await axios.get('http://127.0.0.1:8000/api/Items/'); // Replace 'your-api-url' with your actual API endpoint\r\n//       const data = response.data;\r\n\r\n//       const labels = data.map((item) => item.label);\r\n//       const series = data.map((item) => item.value);\r\n\r\n//       setChartData({\r\n//         options: {\r\n//           labels: [ item_number, feature_name, feature_state, assigned_user, total_test_excuted, test_passed ,test_failed],\r\n//         },\r\n//         series: series,\r\n//       });\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n  \r\n  \r\n\r\n//   return (\r\n//     <div>\r\n//       <Chart\r\n//         options={chartData.options}\r\n//         series={chartData.series}\r\n//         type=\"pie\"\r\n//         width=\"400\"\r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PieChart;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React ,{ useState, useEffect} from \"react\";\r\n// import  Chart  from \"react-apexcharts\";\r\n// function Piechart()\r\n//  {\r\n//    const [featureName, setFeaturename]= useState([]);\r\n//    const [stateLevels, setStatelevels]= useState([]);\r\n//    useEffect( ()=>{\r\n  \r\n//        const sName=[];\r\n//        const sLevel=[];\r\n//        const getItemsdata= async()=>{\r\n//        const reqData= await fetch(\"http://127.0.0.1:8000/api/Items/\");\r\n//        const resData= await reqData.json();       \r\n//        for(let i=0; i < resData.length; i++)\r\n//        {\r\n//         sName.push(resData[i].featureName);\r\n//         sLevel.push(parseInt(resData[i].stateLevel));\r\n//        }\r\n//        setFeaturename(sName);\r\n//        setStatelevels(sLevel);\r\n//         //console.log(resData); \r\n//        }\r\n//     getItemsdata();\r\n//    },[]);\r\n//     return(<React.Fragment><div className=\"Work Status mb-3\"><h3 className=\"mt-3\">Welcome to Piechart </h3><Chart \r\n//                 type=\"pie\"\r\n//                 width={1349}\r\n//                 height={550}\r\n//                 series={[5,8,2,4,9,2,7,6,2,4] }                \r\n//                 options={{\r\n//                         title:{ text:\"Items PieChart\"\r\n//                         }, \r\n//                        noData:{text:\" Empty Data\"},                        \r\n//                       // colors:[\"#f90000\",\"#f0f\"],\r\n//                       labels:[\"State 1\", \"State 2\", \"State 3\", \"State 4\", \"State 5\", \"State 6\" , \"State 7\", \"State 8\", \"State 9\", \"State 10\"]                  \r\n//                  }}></Chart></div></React.Fragment>\r\n//     );\r\n//  }\r\n// export default Piechart;\r\n\r\n/*import React, { useState } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Chart, registerables,ArcElement } from \"chart.js\";\r\nChart.register(...registerables);\r\nChart.register(ArcElement);\r\n\r\nconst MonochromePieChart = () => {\r\n  const [data, setData] = useState({\r\n    labels: [\"State 1\", \"State 2\", \"State 3\", \"State 4\", \"State 5\", \"State 6\" , \"State 7\", \"State 8\", \"State 9\", \"State 10\"],\r\n    datasets: [\r\n      {\r\n        data: [5, 8, 4, 4, 8, 11, 2, 7, 5, 6],\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132)\",\r\n          \"rgba(54, 162, 235)\",\r\n          \"rgba(255, 206, 86)\",\r\n          \"rgba(75, 192, 192)\",\r\n          \"rgba(153, 102, 255)\",\r\n          \"rgba(60, 179, 113)\",\r\n          \"rgba(210, 210, 210)\",\r\n          \"rgba(106, 90, 205)\",\r\n          \"rgba(255, 99, 71)\",\r\n          \"rgba(255, 165, 0)\",\r\n\r\n        ],\r\n        hoverBackgroundColor: [\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n        ],\r\n        borderwidth: 1\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <div className=\"PieChart\" style={{ height: '40%' , width:'30%'}}>\r\n      <Pie data={data} options={{ maintainAspectRatio: true }} />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/*import { useEffect, useState } from 'react';\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport {Chart as ChartJs, Tooltip, Title, ArcElement, Legend} from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nChartJs.register(\r\n  Tooltip, Title, ArcElement, Legend\r\n);\r\nconst data = {\r\n    datasets: [{\r\n        data: [10, 20, 30],\r\n        backgroundColor:[\r\n          'red',\r\n          'blue',\r\n          'yellow'\r\n        ]\r\n    },\r\n  ],\r\n  // These labels appear in the legend and in the tooltips when hovering different arcs\r\n  labels: [\r\n    \"State 1\", \r\n    \"State 2\", \r\n    \"State 3\",\r\n    \"State 4\", \r\n    \"State 5\",\r\n    \"State 6\",\r\n    \"State 7\",\r\n    \"State 8\", \r\n    \"State 9\",\r\n    \"State 10\"\r\n  ], \r\n};\r\nfunction App() {\r\n  const [data, setData] = useState({\r\n    datasets: [{\r\n        data: [10, 20, 30],\r\n        backgroundColor:[\r\n          'red',\r\n          'blue',\r\n          'yellow'\r\n        ]\r\n    },\r\n  ],\r\n  labels: [\r\n      'Red',\r\n      'Yellow',\r\n      'Blue'\r\n  ], \r\n});\r\n  useEffect(()=> {\r\n    const fetchData = () =>  {\r\n      fetch('https://jsonplaceholder.typicode.com/users').then((data) => {\r\n        const res = data.json();\r\n        return res\r\n      }).then((res) => {\r\n        console.log(\"resss\", res)\r\n        const label = [];\r\n        const data = [];\r\n        for(var i of res) {\r\n            label.push(i.name);\r\n            data.push(i.id)\r\n        }\r\n        setData(\r\n          {\r\n            datasets: [{\r\n                data:data,\r\n                backgroundColor:[\r\n                  'red',\r\n                  'blue',\r\n                  'yellow'\r\n                ]\r\n            },\r\n          ],\r\n          labels:label, \r\n        }\r\n        )\r\n      }).catch(e => {\r\n        console.log(\"error\", e)\r\n      }) \r\n    }\r\n  fetchData();\r\n  }, [])\r\n  return (<div className=\"Pie\" style={{width:'30%', height:'30%'}}><PieChart data={data}/></div>\r\n  );\r\n}\r\nexport default MonochromePieChart;*/\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC;AAE9C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,kCAAkC,CAAC;QACpE,MAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAI;;QAE1B;QACA,MAAMC,WAAW,GAAGD,IAAI,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;UAC7C,MAAMC,KAAK,GAAGD,IAAI,CAACE,aAAa;UAChC,IAAIH,GAAG,CAACE,KAAK,CAAC,EAAE;YACdF,GAAG,CAACE,KAAK,CAAC,IAAI,CAAC;UACjB,CAAC,MAAM;YACLF,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC;UAChB;UACA,OAAOF,GAAG;QACZ,CAAC,EAAE,CAAC,CAAC,CAAC;;QAEN;QACA,MAAMR,SAAS,GAAGY,MAAM,CAACC,IAAI,CAACP,WAAW,CAAC,CAACQ,GAAG,CAAEJ,KAAK,KAAM;UACzDK,CAAC,EAAEL,KAAK;UACRM,CAAC,EAAEV,WAAW,CAACI,KAAK;QACtB,CAAC,CAAC,CAAC;QAEHT,YAAY,CAACD,SAAS,CAAC;MACzB,CAAC,CAAC,OAAOiB,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IAEDf,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMkB,OAAO,GAAG;IACdC,KAAK,EAAC;MACJC,IAAI,EAAC;IACP,CAAC;IACDC,KAAK,EAAE;MACLC,IAAI,EAAE;IACR,CAAC;IACDC,MAAM,EAAEzB,SAAS,CAACc,GAAG,CAAET,IAAI,IAAKA,IAAI,CAACU,CAAC;EACxC,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,kBAAkB;IAAA,wBACjC;MAAA,UAAI;IAAwB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC/B,QAAC,cAAc;MACb,OAAO,EAAEK,OAAQ;MACjB,MAAM,EAAEpB,SAAS,CAACc,GAAG,CAAET,IAAI,IAAKA,IAAI,CAACW,CAAC,CAAE;MACxC,IAAI,EAAC,KAAK;MACV,KAAK,EAAE;IAAI;MAAA;MAAA;MAAA;IAAA,QACX;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GAxDIjB,QAAQ;AAAA,KAARA,QAAQ;AA0Dd,eAAeA,QAAQ;;AAGvzIA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}