{"ast":null,"code":"import _slicedToArray from\"C:/Users/juhipawa/Downloads/Charts-main/Charts-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"C:/Users/juhipawa/Downloads/Charts-main/Charts-main/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import React,{useState}from\"react\";import{Pie}from\"react-chartjs-2\";import{Chart,registerables,ArcElement}from\"chart.js\";import{jsx as _jsx}from\"react/jsx-runtime\";Chart.register.apply(Chart,_toConsumableArray(registerables));Chart.register(ArcElement);var PieChart=function PieChart(){var _useState=useState({labels:[\"State 1\",\"State 2\",\"State 3\",\"State 4\",\"State 5\",\"State 6\",\"State 7\",\"State 8\",\"State 9\",\"State 10\"],datasets:[{data:[5,8,4,4,8,11,2,7,5,6],backgroundColor:[\"rgba(255, 99, 132)\",\"rgba(54, 162, 235)\",\"rgba(255, 206, 86)\",\"rgba(75, 192, 192)\",\"rgba(153, 102, 255)\",\"rgba(60, 179, 113)\",\"rgba(210, 210, 210)\",\"rgba(106, 90, 205)\",\"rgba(255, 99, 71)\",\"rgba(255, 165, 0)\"],hoverBackgroundColor:[\"rgb(255,255,255)\",\"rgb(255,255,255)\",\"rgb(255,255,255)\",\"rgb(255,255,255)\",\"rgb(255,255,255)\",\"rgb(255,255,255)\",\"rgb(255,255,255)\",\"rgb(255,255,255)\",\"rgb(255,255,255)\",\"rgb(255,255,255)\"],borderwidth:1}]}),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];return/*#__PURE__*/_jsx(\"div\",{className:\"PieChart\",style:{height:'30%',width:'30%'},children:/*#__PURE__*/_jsx(Pie,{data:data,options:{maintainAspectRatio:true}})});};/*import { useEffect, useState } from 'react';\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport {Chart as ChartJs, Tooltip, Title, ArcElement, Legend} from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nChartJs.register(\r\n  Tooltip, Title, ArcElement, Legend\r\n);\r\nconst data = {\r\n    datasets: [{\r\n        data: [10, 20, 30],\r\n        backgroundColor:[\r\n          'red',\r\n          'blue',\r\n          'yellow'\r\n        ]\r\n    },\r\n  ],\r\n  // These labels appear in the legend and in the tooltips when hovering different arcs\r\n  labels: [\r\n    \"State 1\", \r\n    \"State 2\", \r\n    \"State 3\",\r\n    \"State 4\", \r\n    \"State 5\",\r\n    \"State 6\",\r\n    \"State 7\",\r\n    \"State 8\", \r\n    \"State 9\",\r\n    \"State 10\"\r\n  ], \r\n};\r\nfunction App() {\r\n  const [data, setData] = useState({\r\n    datasets: [{\r\n        data: [10, 20, 30],\r\n        backgroundColor:[\r\n          'red',\r\n          'blue',\r\n          'yellow'\r\n        ]\r\n    },\r\n  ],\r\n  labels: [\r\n      'Red',\r\n      'Yellow',\r\n      'Blue'\r\n  ], \r\n});\r\n  useEffect(()=> {\r\n    const fetchData = () =>  {\r\n      fetch('https://jsonplaceholder.typicode.com/users').then((data) => {\r\n        const res = data.json();\r\n        return res\r\n      }).then((res) => {\r\n        console.log(\"resss\", res)\r\n        const label = [];\r\n        const data = [];\r\n        for(var i of res) {\r\n            label.push(i.name);\r\n            data.push(i.id)\r\n        }\r\n        setData(\r\n          {\r\n            datasets: [{\r\n                data:data,\r\n                backgroundColor:[\r\n                  'red',\r\n                  'blue',\r\n                  'yellow'\r\n                ]\r\n            },\r\n          ],\r\n          labels:label, \r\n        }\r\n        )\r\n      }).catch(e => {\r\n        console.log(\"error\", e)\r\n      }) \r\n    }\r\n  fetchData();\r\n  }, [])\r\n  return (<div className=\"Pie\" style={{width:'30%', height:'30%'}}><PieChart data={data}/></div>\r\n  );\r\n}*/export default PieChart;","map":{"version":3,"names":["React","useState","Pie","Chart","registerables","ArcElement","register","PieChart","labels","datasets","data","backgroundColor","hoverBackgroundColor","borderwidth","setData","height","width","maintainAspectRatio"],"sources":["C:/Users/juhipawa/Downloads/Charts-main/Charts-main/src/components/PieChart.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Chart, registerables,ArcElement } from \"chart.js\";\r\nChart.register(...registerables);\r\nChart.register(ArcElement);\r\n\r\nconst PieChart = () => {\r\n  const [data, setData] = useState({\r\n    labels: [\"State 1\", \"State 2\", \"State 3\", \"State 4\", \"State 5\", \"State 6\" , \"State 7\", \"State 8\", \"State 9\", \"State 10\"],\r\n    datasets: [\r\n      {\r\n        data: [5, 8, 4, 4, 8, 11, 2, 7, 5, 6],\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132)\",\r\n          \"rgba(54, 162, 235)\",\r\n          \"rgba(255, 206, 86)\",\r\n          \"rgba(75, 192, 192)\",\r\n          \"rgba(153, 102, 255)\",\r\n          \"rgba(60, 179, 113)\",\r\n          \"rgba(210, 210, 210)\",\r\n          \"rgba(106, 90, 205)\",\r\n          \"rgba(255, 99, 71)\",\r\n          \"rgba(255, 165, 0)\",\r\n\r\n        ],\r\n        hoverBackgroundColor: [\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n        ],\r\n        borderwidth: 1\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <div className=\"PieChart\" style={{ height: '30%' , width:'30%'}}>\r\n      <Pie data={data} options={{ maintainAspectRatio: true }} />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n/*import { useEffect, useState } from 'react';\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport {Chart as ChartJs, Tooltip, Title, ArcElement, Legend} from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nChartJs.register(\r\n  Tooltip, Title, ArcElement, Legend\r\n);\r\nconst data = {\r\n    datasets: [{\r\n        data: [10, 20, 30],\r\n        backgroundColor:[\r\n          'red',\r\n          'blue',\r\n          'yellow'\r\n        ]\r\n    },\r\n  ],\r\n  // These labels appear in the legend and in the tooltips when hovering different arcs\r\n  labels: [\r\n    \"State 1\", \r\n    \"State 2\", \r\n    \"State 3\",\r\n    \"State 4\", \r\n    \"State 5\",\r\n    \"State 6\",\r\n    \"State 7\",\r\n    \"State 8\", \r\n    \"State 9\",\r\n    \"State 10\"\r\n  ], \r\n};\r\nfunction App() {\r\n  const [data, setData] = useState({\r\n    datasets: [{\r\n        data: [10, 20, 30],\r\n        backgroundColor:[\r\n          'red',\r\n          'blue',\r\n          'yellow'\r\n        ]\r\n    },\r\n  ],\r\n  labels: [\r\n      'Red',\r\n      'Yellow',\r\n      'Blue'\r\n  ], \r\n});\r\n  useEffect(()=> {\r\n    const fetchData = () =>  {\r\n      fetch('https://jsonplaceholder.typicode.com/users').then((data) => {\r\n        const res = data.json();\r\n        return res\r\n      }).then((res) => {\r\n        console.log(\"resss\", res)\r\n        const label = [];\r\n        const data = [];\r\n        for(var i of res) {\r\n            label.push(i.name);\r\n            data.push(i.id)\r\n        }\r\n        setData(\r\n          {\r\n            datasets: [{\r\n                data:data,\r\n                backgroundColor:[\r\n                  'red',\r\n                  'blue',\r\n                  'yellow'\r\n                ]\r\n            },\r\n          ],\r\n          labels:label, \r\n        }\r\n        )\r\n      }).catch(e => {\r\n        console.log(\"error\", e)\r\n      }) \r\n    }\r\n  fetchData();\r\n  }, [])\r\n  return (<div className=\"Pie\" style={{width:'30%', height:'30%'}}><PieChart data={data}/></div>\r\n  );\r\n}*/\r\nexport default PieChart;\r\n\r\n"],"mappings":"0RAAA,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,GAAG,KAAQ,iBAAiB,CACrC,OAASC,KAAK,CAAEC,aAAa,CAACC,UAAU,KAAQ,UAAU,CAAC,2CAC3DF,KAAK,CAACG,QAAQ,OAAdH,KAAK,oBAAaC,aAAa,EAAC,CAChCD,KAAK,CAACG,QAAQ,CAACD,UAAU,CAAC,CAE1B,GAAME,SAAQ,CAAG,QAAXA,SAAQ,EAAS,CACrB,cAAwBN,QAAQ,CAAC,CAC/BO,MAAM,CAAE,CAAC,SAAS,CAAE,SAAS,CAAE,SAAS,CAAE,SAAS,CAAE,SAAS,CAAE,SAAS,CAAG,SAAS,CAAE,SAAS,CAAE,SAAS,CAAE,UAAU,CAAC,CACxHC,QAAQ,CAAE,CACR,CACEC,IAAI,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,EAAE,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACrCC,eAAe,CAAE,CACf,oBAAoB,CACpB,oBAAoB,CACpB,oBAAoB,CACpB,oBAAoB,CACpB,qBAAqB,CACrB,oBAAoB,CACpB,qBAAqB,CACrB,oBAAoB,CACpB,mBAAmB,CACnB,mBAAmB,CAEpB,CACDC,oBAAoB,CAAE,CACpB,kBAAkB,CAClB,kBAAkB,CAClB,kBAAkB,CAClB,kBAAkB,CAClB,kBAAkB,CAClB,kBAAkB,CAClB,kBAAkB,CAClB,kBAAkB,CAClB,kBAAkB,CAClB,kBAAkB,CACnB,CACDC,WAAW,CAAE,CACf,CAAC,CAEL,CAAC,CAAC,wCAjCKH,IAAI,eAAEI,OAAO,eAmCpB,mBACE,YAAK,SAAS,CAAC,UAAU,CAAC,KAAK,CAAE,CAAEC,MAAM,CAAE,KAAK,CAAGC,KAAK,CAAC,KAAK,CAAE,uBAC9D,KAAC,GAAG,EAAC,IAAI,CAAEN,IAAK,CAAC,OAAO,CAAE,CAAEO,mBAAmB,CAAE,IAAK,CAAE,EAAG,EACvD,CAEV,CAAC,CAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,cAAeV,SAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}