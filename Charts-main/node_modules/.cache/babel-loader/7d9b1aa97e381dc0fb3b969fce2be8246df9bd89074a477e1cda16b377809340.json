{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juhipawa\\\\Downloads\\\\Charts-main\\\\Charts-main\\\\src\\\\components\\\\PieChart.js\",\n  _s = $RefreshSig$();\n/*import React ,{ useState, useEffect} from \"react\";\r\nimport  Chart  from \"react-apexcharts\";\r\nfunction MonochromePiechart()\r\n{\r\n   const [employeeName, setEmployeename]= useState([]);\r\n   const [stateLevels, setStatelevels]= useState([]);\r\n   useEffect( ()=>{\r\n       const sName=[];\r\n       const sLevel=[];\r\n       const getEmployeedata= async()=>{\r\n       const reqData= await fetch(\"http://localhost/reactgraphtutorial/medals\");\r\n       const resData= await reqData.json();       \r\n       for(let i=0; i< resData.length; i++)\r\n       {\r\n        sName.push(resData[i].employee);\r\n        sLevel.push(parseInt(resData[i].statelevel));\r\n       }\r\n       setEmployeename(sName);\r\n       setStatelevels(sLevel);\r\n        //console.log(resData); \r\n       }\r\n    getEmployeedata();\r\n   },[]);\r\n    return(<React.Fragment><div className=\"Work Status\"><h3 className=\"mt-3\">Welcome to Piechart </h3><Chart \r\n                type=\"pie\"\r\n                width={1349}\r\n                height={550}\r\n                series={ statelevels }                \r\n                options={{\r\n                        title:{ text:\"Employee PieChart\"\r\n                        } , \r\n                       noData:{text:\"Empty Data\"},                        \r\n                      // colors:[\"#f90000\",\"#f0f\"],\r\n                      labels:\"employeeName\"                  \r\n                 }}></Chart></div></React.Fragment>\r\n    );\r\n}\r\nexport default MonochromePiechart;*/\n\nimport React, { useState } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { Chart, registerables, ArcElement } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nChart.register(ArcElement);\nconst MonochromePieChart = () => {\n  _s();\n  const [data, setData] = useState({\n    labels: [\"State 1\", \"State 2\", \"State 3\", \"State 4\", \"State 5\", \"State 6\", \"State 7\", \"State 8\", \"State 9\", \"State 10\"],\n    datasets: [{\n      data: [5, 8, 4, 4, 8, 11, 2, 7, 5, 6],\n      backgroundColor: [\"rgba(255, 99, 132)\", \"rgba(54, 162, 235)\", \"rgba(255, 206, 86)\", \"rgba(75, 192, 192)\", \"rgba(153, 102, 255)\", \"rgba(60, 179, 113)\", \"rgba(210, 210, 210)\", \"rgba(106, 90, 205)\", \"rgba(255, 99, 71)\", \"rgba(255, 165, 0)\"],\n      hoverBackgroundColor: [\"rgb(255,255,255)\", \"rgb(255,255,255)\", \"rgb(255,255,255)\", \"rgb(255,255,255)\", \"rgb(255,255,255)\", \"rgb(255,255,255)\", \"rgb(255,255,255)\", \"rgb(255,255,255)\", \"rgb(255,255,255)\", \"rgb(255,255,255)\"],\n      borderwidth: 1\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PieChart\",\n    style: {\n      height: '40%',\n      width: '30%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Pie, {\n      data: data,\n      options: {\n        maintainAspectRatio: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n/*import { useEffect, useState } from 'react';\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport {Chart as ChartJs, Tooltip, Title, ArcElement, Legend} from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nChartJs.register(\r\n  Tooltip, Title, ArcElement, Legend\r\n);\r\nconst data = {\r\n    datasets: [{\r\n        data: [10, 20, 30],\r\n        backgroundColor:[\r\n          'red',\r\n          'blue',\r\n          'yellow'\r\n        ]\r\n    },\r\n  ],\r\n  // These labels appear in the legend and in the tooltips when hovering different arcs\r\n  labels: [\r\n    \"State 1\", \r\n    \"State 2\", \r\n    \"State 3\",\r\n    \"State 4\", \r\n    \"State 5\",\r\n    \"State 6\",\r\n    \"State 7\",\r\n    \"State 8\", \r\n    \"State 9\",\r\n    \"State 10\"\r\n  ], \r\n};\r\nfunction App() {\r\n  const [data, setData] = useState({\r\n    datasets: [{\r\n        data: [10, 20, 30],\r\n        backgroundColor:[\r\n          'red',\r\n          'blue',\r\n          'yellow'\r\n        ]\r\n    },\r\n  ],\r\n  labels: [\r\n      'Red',\r\n      'Yellow',\r\n      'Blue'\r\n  ], \r\n});\r\n  useEffect(()=> {\r\n    const fetchData = () =>  {\r\n      fetch('https://jsonplaceholder.typicode.com/users').then((data) => {\r\n        const res = data.json();\r\n        return res\r\n      }).then((res) => {\r\n        console.log(\"resss\", res)\r\n        const label = [];\r\n        const data = [];\r\n        for(var i of res) {\r\n            label.push(i.name);\r\n            data.push(i.id)\r\n        }\r\n        setData(\r\n          {\r\n            datasets: [{\r\n                data:data,\r\n                backgroundColor:[\r\n                  'red',\r\n                  'blue',\r\n                  'yellow'\r\n                ]\r\n            },\r\n          ],\r\n          labels:label, \r\n        }\r\n        )\r\n      }).catch(e => {\r\n        console.log(\"error\", e)\r\n      }) \r\n    }\r\n  fetchData();\r\n  }, [])\r\n  return (<div className=\"Pie\" style={{width:'30%', height:'30%'}}><PieChart data={data}/></div>\r\n  );\r\n}*/\n_s(MonochromePieChart, \"3k9nOe6tQF2abn0hrZCbOKd1JJY=\");\n_c = MonochromePieChart;\nexport default MonochromePieChart;\nvar _c;\n$RefreshReg$(_c, \"MonochromePieChart\");","map":{"version":3,"names":["React","useState","Pie","Chart","registerables","ArcElement","register","MonochromePieChart","data","setData","labels","datasets","backgroundColor","hoverBackgroundColor","borderwidth","height","width","maintainAspectRatio"],"sources":["C:/Users/juhipawa/Downloads/Charts-main/Charts-main/src/components/PieChart.js"],"sourcesContent":["/*import React ,{ useState, useEffect} from \"react\";\r\nimport  Chart  from \"react-apexcharts\";\r\nfunction MonochromePiechart()\r\n{\r\n   const [employeeName, setEmployeename]= useState([]);\r\n   const [stateLevels, setStatelevels]= useState([]);\r\n   useEffect( ()=>{\r\n       const sName=[];\r\n       const sLevel=[];\r\n       const getEmployeedata= async()=>{\r\n       const reqData= await fetch(\"http://localhost/reactgraphtutorial/medals\");\r\n       const resData= await reqData.json();       \r\n       for(let i=0; i< resData.length; i++)\r\n       {\r\n        sName.push(resData[i].employee);\r\n        sLevel.push(parseInt(resData[i].statelevel));\r\n       }\r\n       setEmployeename(sName);\r\n       setStatelevels(sLevel);\r\n        //console.log(resData); \r\n       }\r\n    getEmployeedata();\r\n   },[]);\r\n    return(<React.Fragment><div className=\"Work Status\"><h3 className=\"mt-3\">Welcome to Piechart </h3><Chart \r\n                type=\"pie\"\r\n                width={1349}\r\n                height={550}\r\n                series={ statelevels }                \r\n                options={{\r\n                        title:{ text:\"Employee PieChart\"\r\n                        } , \r\n                       noData:{text:\"Empty Data\"},                        \r\n                      // colors:[\"#f90000\",\"#f0f\"],\r\n                      labels:\"employeeName\"                  \r\n                 }}></Chart></div></React.Fragment>\r\n    );\r\n}\r\nexport default MonochromePiechart;*/\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Chart, registerables,ArcElement } from \"chart.js\";\r\nChart.register(...registerables);\r\nChart.register(ArcElement);\r\n\r\nconst MonochromePieChart = () => {\r\n  const [data, setData] = useState({\r\n    labels: [\"State 1\", \"State 2\", \"State 3\", \"State 4\", \"State 5\", \"State 6\" , \"State 7\", \"State 8\", \"State 9\", \"State 10\"],\r\n    datasets: [\r\n      {\r\n        data: [5, 8, 4, 4, 8, 11, 2, 7, 5, 6],\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132)\",\r\n          \"rgba(54, 162, 235)\",\r\n          \"rgba(255, 206, 86)\",\r\n          \"rgba(75, 192, 192)\",\r\n          \"rgba(153, 102, 255)\",\r\n          \"rgba(60, 179, 113)\",\r\n          \"rgba(210, 210, 210)\",\r\n          \"rgba(106, 90, 205)\",\r\n          \"rgba(255, 99, 71)\",\r\n          \"rgba(255, 165, 0)\",\r\n\r\n        ],\r\n        hoverBackgroundColor: [\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n          \"rgb(255,255,255)\",\r\n        ],\r\n        borderwidth: 1\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <div className=\"PieChart\" style={{ height: '40%' , width:'30%'}}>\r\n      <Pie data={data} options={{ maintainAspectRatio: true }} />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/*import { useEffect, useState } from 'react';\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport {Chart as ChartJs, Tooltip, Title, ArcElement, Legend} from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nChartJs.register(\r\n  Tooltip, Title, ArcElement, Legend\r\n);\r\nconst data = {\r\n    datasets: [{\r\n        data: [10, 20, 30],\r\n        backgroundColor:[\r\n          'red',\r\n          'blue',\r\n          'yellow'\r\n        ]\r\n    },\r\n  ],\r\n  // These labels appear in the legend and in the tooltips when hovering different arcs\r\n  labels: [\r\n    \"State 1\", \r\n    \"State 2\", \r\n    \"State 3\",\r\n    \"State 4\", \r\n    \"State 5\",\r\n    \"State 6\",\r\n    \"State 7\",\r\n    \"State 8\", \r\n    \"State 9\",\r\n    \"State 10\"\r\n  ], \r\n};\r\nfunction App() {\r\n  const [data, setData] = useState({\r\n    datasets: [{\r\n        data: [10, 20, 30],\r\n        backgroundColor:[\r\n          'red',\r\n          'blue',\r\n          'yellow'\r\n        ]\r\n    },\r\n  ],\r\n  labels: [\r\n      'Red',\r\n      'Yellow',\r\n      'Blue'\r\n  ], \r\n});\r\n  useEffect(()=> {\r\n    const fetchData = () =>  {\r\n      fetch('https://jsonplaceholder.typicode.com/users').then((data) => {\r\n        const res = data.json();\r\n        return res\r\n      }).then((res) => {\r\n        console.log(\"resss\", res)\r\n        const label = [];\r\n        const data = [];\r\n        for(var i of res) {\r\n            label.push(i.name);\r\n            data.push(i.id)\r\n        }\r\n        setData(\r\n          {\r\n            datasets: [{\r\n                data:data,\r\n                backgroundColor:[\r\n                  'red',\r\n                  'blue',\r\n                  'yellow'\r\n                ]\r\n            },\r\n          ],\r\n          labels:label, \r\n        }\r\n        )\r\n      }).catch(e => {\r\n        console.log(\"error\", e)\r\n      }) \r\n    }\r\n  fetchData();\r\n  }, [])\r\n  return (<div className=\"Pie\" style={{width:'30%', height:'30%'}}><PieChart data={data}/></div>\r\n  );\r\n}*/\r\nexport default MonochromePieChart;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,EAAEC,aAAa,EAACC,UAAU,QAAQ,UAAU;AAAC;AAC3DF,KAAK,CAACG,QAAQ,CAAC,GAAGF,aAAa,CAAC;AAChCD,KAAK,CAACG,QAAQ,CAACD,UAAU,CAAC;AAE1B,MAAME,kBAAkB,GAAG,MAAM;EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;IAC/BS,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAG,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,CAAC;IACxHC,QAAQ,EAAE,CACR;MACEH,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACrCI,eAAe,EAAE,CACf,oBAAoB,EACpB,oBAAoB,EACpB,oBAAoB,EACpB,oBAAoB,EACpB,qBAAqB,EACrB,oBAAoB,EACpB,qBAAqB,EACrB,oBAAoB,EACpB,mBAAmB,EACnB,mBAAmB,CAEpB;MACDC,oBAAoB,EAAE,CACpB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,CACnB;MACDC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC,CAAC;EAEF,oBACE;IAAK,SAAS,EAAC,UAAU;IAAC,KAAK,EAAE;MAAEC,MAAM,EAAE,KAAK;MAAGC,KAAK,EAAC;IAAK,CAAE;IAAA,uBAC9D,QAAC,GAAG;MAAC,IAAI,EAAER,IAAK;MAAC,OAAO,EAAE;QAAES,mBAAmB,EAAE;MAAK;IAAE;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACvD;AAEV,CAAC;;AAMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnFA,GA/CMV,kBAAkB;AAAA,KAAlBA,kBAAkB;AAmIxB,eAAeA,kBAAkB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}